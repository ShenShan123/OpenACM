/* Generated by Yosys 0.9 (git sha1 1979e0b) */

module ACCI1(a, b, c, d, S, C);
  wire _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  wire _10_;
  wire _11_;
  wire _12_;
  wire _13_;
  wire _14_;
  wire _15_;
  wire _16_;
  wire _17_;
  wire _18_;
  wire _19_;
  wire _20_;
  output C;
  output S;
  input a;
  input b;
  input c;
  input d;
  NAND3_X1 _21_ (
    .A1(_12_),
    .A2(_11_),
    .A3(_13_),
    .ZN(_18_)
  );
  XOR2_X1 _22_ (
    .A(_12_),
    .B(_11_),
    .Z(_19_)
  );
  XOR2_X1 _23_ (
    .A(_13_),
    .B(_14_),
    .Z(_20_)
  );
  NAND2_X1 _24_ (
    .A1(_19_),
    .A2(_20_),
    .ZN(_15_)
  );
  XNOR2_X1 _25_ (
    .A(_19_),
    .B(_20_),
    .ZN(_16_)
  );
  NAND2_X1 _26_ (
    .A1(_18_),
    .A2(_16_),
    .ZN(_10_)
  );
  AOI22_X1 _27_ (
    .A1(_12_),
    .A2(_11_),
    .B1(_13_),
    .B2(_14_),
    .ZN(_17_)
  );
  NAND2_X1 _28_ (
    .A1(_15_),
    .A2(_17_),
    .ZN(_09_)
  );
  assign _12_ = b;
  assign _11_ = a;
  assign _13_ = c;
  assign _14_ = d;
  assign S = _10_;
  assign C = _09_;
endmodule

module Appro4_2_16bit(N1, N2, P_APPROX);
  input [15:0] N1;
  input [15:0] N2;
  output [31:0] P_APPROX;
  wire pp_0;
  wire [1:0] pp_1;
  wire [7:0] pp_10;
  wire [7:0] pp_11;
  wire [7:0] pp_12;
  wire [7:0] pp_13;
  wire [7:0] pp_14;
  wire [7:0] pp_15;
  wire [7:0] pp_16;
  wire [7:0] pp_17;
  wire [7:0] pp_18;
  wire [7:0] pp_19;
  wire [2:0] pp_2;
  wire [7:0] pp_20;
  wire [7:0] pp_21;
  wire [7:0] pp_22;
  wire [7:0] pp_23;
  wire [7:0] pp_24;
  wire [5:0] pp_25;
  wire [4:0] pp_26;
  wire [3:0] pp_27;
  wire [2:0] pp_28;
  wire [1:0] pp_29;
  wire [3:0] pp_3;
  wire pp_30;
  wire [4:0] pp_4;
  wire [5:0] pp_5;
  wire [6:0] pp_6;
  wire [7:0] pp_7;
  wire [7:0] pp_8;
  wire [7:0] pp_9;
  wire s_0;
  wire [1:0] s_1;
  wire [3:0] s_10;
  wire [3:0] s_11;
  wire [3:0] s_12;
  wire [3:0] s_13;
  wire [3:0] s_14;
  wire [3:0] s_15;
  wire [3:0] s_16;
  wire [3:0] s_17;
  wire [3:0] s_18;
  wire [3:0] s_19;
  wire [2:0] s_2;
  wire [3:0] s_20;
  wire [3:0] s_21;
  wire [3:0] s_22;
  wire [3:0] s_23;
  wire [3:0] s_24;
  wire [3:0] s_25;
  wire [3:0] s_26;
  wire [3:0] s_27;
  wire [3:0] s_28;
  wire [1:0] s_29;
  wire [3:0] s_3;
  wire s_30;
  wire [3:0] s_4;
  wire [3:0] s_5;
  wire [3:0] s_6;
  wire [3:0] s_7;
  wire [3:0] s_8;
  wire [3:0] s_9;
  STAGE1 STAGE1 (
    .A(N1),
    .B(N2),
    .pp_0(pp_0),
    .pp_1(pp_1),
    .pp_10(pp_10),
    .pp_11(pp_11),
    .pp_12(pp_12),
    .pp_13(pp_13),
    .pp_14(pp_14),
    .pp_15(pp_15),
    .pp_16(pp_16),
    .pp_17(pp_17),
    .pp_18(pp_18),
    .pp_19(pp_19),
    .pp_2(pp_2),
    .pp_20(pp_20),
    .pp_21(pp_21),
    .pp_22(pp_22),
    .pp_23(pp_23),
    .pp_24(pp_24),
    .pp_25(pp_25),
    .pp_26(pp_26),
    .pp_27(pp_27),
    .pp_28(pp_28),
    .pp_29(pp_29),
    .pp_3(pp_3),
    .pp_30(pp_30),
    .pp_4(pp_4),
    .pp_5(pp_5),
    .pp_6(pp_6),
    .pp_7(pp_7),
    .pp_8(pp_8),
    .pp_9(pp_9)
  );
  STAGE2 STAGE2 (
    .pp_0(s_0),
    .pp_1(s_1),
    .pp_10(s_10),
    .pp_11(s_11),
    .pp_12(s_12),
    .pp_13(s_13),
    .pp_14(s_14),
    .pp_15(s_15),
    .pp_16(s_16),
    .pp_17(s_17),
    .pp_18(s_18),
    .pp_19(s_19),
    .pp_2(s_2),
    .pp_20(s_20),
    .pp_21(s_21),
    .pp_22(s_22),
    .pp_23(s_23),
    .pp_24(s_24),
    .pp_25(s_25),
    .pp_26(s_26),
    .pp_27(s_27),
    .pp_28(s_28),
    .pp_29(s_29),
    .pp_3(s_3),
    .pp_30(s_30),
    .pp_4(s_4),
    .pp_5(s_5),
    .pp_6(s_6),
    .pp_7(s_7),
    .pp_8(s_8),
    .pp_9(s_9),
    .s_0(pp_0),
    .s_1(pp_1),
    .s_10(pp_10),
    .s_11(pp_11),
    .s_12(pp_12),
    .s_13(pp_13),
    .s_14(pp_14),
    .s_15(pp_15),
    .s_16(pp_16),
    .s_17(pp_17),
    .s_18(pp_18),
    .s_19(pp_19),
    .s_2(pp_2),
    .s_20(pp_20),
    .s_21(pp_21),
    .s_22(pp_22),
    .s_23(pp_23),
    .s_24(pp_24),
    .s_25(pp_25),
    .s_26(pp_26),
    .s_27(pp_27),
    .s_28(pp_28),
    .s_29(pp_29),
    .s_3(pp_3),
    .s_30(pp_30),
    .s_4(pp_4),
    .s_5(pp_5),
    .s_6(pp_6),
    .s_7(pp_7),
    .s_8(pp_8),
    .s_9(pp_9)
  );
  STAGE3 STAGE3 (
    .approx(P_APPROX),
    .pp_0(s_0),
    .pp_1(s_1),
    .pp_10(s_10),
    .pp_11(s_11),
    .pp_12(s_12),
    .pp_13(s_13),
    .pp_14(s_14),
    .pp_15(s_15),
    .pp_16(s_16),
    .pp_17(s_17),
    .pp_18(s_18),
    .pp_19(s_19),
    .pp_2(s_2),
    .pp_20(s_20),
    .pp_21(s_21),
    .pp_22(s_22),
    .pp_23(s_23),
    .pp_24(s_24),
    .pp_25(s_25),
    .pp_26(s_26),
    .pp_27(s_27),
    .pp_28(s_28),
    .pp_29(s_29),
    .pp_3(s_3),
    .pp_30(s_30),
    .pp_4(s_4),
    .pp_5(s_5),
    .pp_6(s_6),
    .pp_7(s_7),
    .pp_8(s_8),
    .pp_9(s_9)
  );
endmodule

module CLA16bit(A, B, Cin, Sum, Cout);
  input [15:0] A;
  input [15:0] B;
  input Cin;
  output Cout;
  output [15:0] Sum;
  wire c1;
  wire c2;
  wire c3;
  CLA4bit cla1 (
    .A(A[3:0]),
    .B(B[3:0]),
    .Cin(Cin),
    .Cout(c1),
    .Sum(Sum[3:0])
  );
  CLA4bit cla2 (
    .A(A[7:4]),
    .B(B[7:4]),
    .Cin(c1),
    .Cout(c2),
    .Sum(Sum[7:4])
  );
  CLA4bit cla3 (
    .A(A[11:8]),
    .B(B[11:8]),
    .Cin(c2),
    .Cout(c3),
    .Sum(Sum[11:8])
  );
  CLA4bit cla4 (
    .A(A[15:12]),
    .B(B[15:12]),
    .Cin(c3),
    .Cout(Cout),
    .Sum(Sum[15:12])
  );
endmodule

module CLA32bit(A, B, Cin, Sum, Cout);
  input [31:0] A;
  input [31:0] B;
  input Cin;
  output Cout;
  output [31:0] Sum;
  wire c1;
  CLA16bit cla1 (
    .A(A[15:0]),
    .B(B[15:0]),
    .Cin(Cin),
    .Cout(c1),
    .Sum(Sum[15:0])
  );
  CLA16bit cla2 (
    .A(A[31:16]),
    .B(B[31:16]),
    .Cin(c1),
    .Cout(Cout),
    .Sum(Sum[31:16])
  );
endmodule

module CLA4bit(A, B, Cin, Sum, Cout);
  wire _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  wire _10_;
  wire _11_;
  wire _12_;
  wire _13_;
  wire _14_;
  wire _15_;
  wire _16_;
  wire _17_;
  wire _18_;
  wire _19_;
  wire _20_;
  wire _21_;
  wire _22_;
  wire _23_;
  wire _24_;
  wire _25_;
  wire _26_;
  wire _27_;
  wire _28_;
  wire _29_;
  wire _30_;
  wire _31_;
  wire _32_;
  wire _33_;
  wire _34_;
  wire _35_;
  wire _36_;
  wire _37_;
  wire _38_;
  wire _39_;
  input [3:0] A;
  input [3:0] B;
  wire [3:0] C;
  input Cin;
  output Cout;
  output [3:0] Sum;
  NAND2_X1 _40_ (
    .A1(_18_),
    .A2(_14_),
    .ZN(_25_)
  );
  AND2_X1 _41_ (
    .A1(_17_),
    .A2(_13_),
    .ZN(_26_)
  );
  NAND2_X1 _42_ (
    .A1(_16_),
    .A2(_12_),
    .ZN(_27_)
  );
  AND2_X1 _43_ (
    .A1(_15_),
    .A2(_11_),
    .ZN(_28_)
  );
  OR2_X1 _44_ (
    .A1(_15_),
    .A2(_11_),
    .ZN(_29_)
  );
  XNOR2_X1 _45_ (
    .A(_15_),
    .B(_11_),
    .ZN(_30_)
  );
  AOI21_X1 _46_ (
    .A(_28_),
    .B1(_29_),
    .B2(_19_),
    .ZN(_31_)
  );
  NOR2_X1 _47_ (
    .A1(_16_),
    .A2(_12_),
    .ZN(_32_)
  );
  XOR2_X1 _48_ (
    .A(_16_),
    .B(_12_),
    .Z(_33_)
  );
  OAI21_X1 _49_ (
    .A(_27_),
    .B1(_31_),
    .B2(_32_),
    .ZN(_34_)
  );
  OR2_X1 _50_ (
    .A1(_17_),
    .A2(_13_),
    .ZN(_35_)
  );
  XNOR2_X1 _51_ (
    .A(_17_),
    .B(_13_),
    .ZN(_36_)
  );
  AOI21_X1 _52_ (
    .A(_26_),
    .B1(_34_),
    .B2(_35_),
    .ZN(_37_)
  );
  NOR2_X1 _53_ (
    .A1(_18_),
    .A2(_14_),
    .ZN(_38_)
  );
  XOR2_X1 _54_ (
    .A(_18_),
    .B(_14_),
    .Z(_39_)
  );
  OAI21_X1 _55_ (
    .A(_25_),
    .B1(_37_),
    .B2(_38_),
    .ZN(_20_)
  );
  XNOR2_X1 _56_ (
    .A(_19_),
    .B(_30_),
    .ZN(_21_)
  );
  XNOR2_X1 _57_ (
    .A(_31_),
    .B(_33_),
    .ZN(_22_)
  );
  XNOR2_X1 _58_ (
    .A(_34_),
    .B(_36_),
    .ZN(_23_)
  );
  XNOR2_X1 _59_ (
    .A(_37_),
    .B(_39_),
    .ZN(_24_)
  );
  assign C[3] = Cout;
  assign _18_ = B[3];
  assign _14_ = A[3];
  assign _17_ = B[2];
  assign _13_ = A[2];
  assign _16_ = B[1];
  assign _12_ = A[1];
  assign _15_ = B[0];
  assign _11_ = A[0];
  assign _19_ = Cin;
  assign Cout = _20_;
  assign Sum[0] = _21_;
  assign Sum[1] = _22_;
  assign Sum[2] = _23_;
  assign Sum[3] = _24_;
endmodule

module E_4_2(a, b, c, d, CIN, S, C, COUT);
  wire _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  wire _10_;
  wire _11_;
  wire _12_;
  wire _13_;
  wire _14_;
  wire _15_;
  wire _16_;
  wire _17_;
  output C;
  input CIN;
  output COUT;
  output S;
  input a;
  input b;
  input c;
  input d;
  INV_X1 _18_ (
    .A(_04_),
    .ZN(_17_)
  );
  NAND2_X1 _19_ (
    .A1(_08_),
    .A2(_07_),
    .ZN(_11_)
  );
  XOR2_X1 _20_ (
    .A(_08_),
    .B(_07_),
    .Z(_12_)
  );
  NAND2_X1 _21_ (
    .A1(_09_),
    .A2(_12_),
    .ZN(_13_)
  );
  XOR2_X1 _22_ (
    .A(_09_),
    .B(_12_),
    .Z(_14_)
  );
  NAND2_X1 _23_ (
    .A1(_10_),
    .A2(_14_),
    .ZN(_15_)
  );
  XNOR2_X1 _24_ (
    .A(_10_),
    .B(_14_),
    .ZN(_16_)
  );
  XNOR2_X1 _25_ (
    .A(_04_),
    .B(_16_),
    .ZN(_06_)
  );
  NAND2_X1 _26_ (
    .A1(_11_),
    .A2(_13_),
    .ZN(_05_)
  );
  OAI21_X1 _27_ (
    .A(_15_),
    .B1(_16_),
    .B2(_17_),
    .ZN(_03_)
  );
  assign _08_ = b;
  assign _07_ = a;
  assign _09_ = c;
  assign _10_ = d;
  assign _04_ = CIN;
  assign S = _06_;
  assign COUT = _05_;
  assign C = _03_;
endmodule

module Full_adder(a, b, CIN, S, C);
  wire _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  wire _10_;
  wire _11_;
  output C;
  input CIN;
  output S;
  input a;
  input b;
  INV_X1 _12_ (
    .A(_04_),
    .ZN(_08_)
  );
  NAND3_X1 _13_ (
    .A1(_07_),
    .A2(_06_),
    .A3(_04_),
    .ZN(_09_)
  );
  NOR2_X1 _14_ (
    .A1(_07_),
    .A2(_06_),
    .ZN(_10_)
  );
  AOI21_X1 _15_ (
    .A(_04_),
    .B1(_06_),
    .B2(_07_),
    .ZN(_11_)
  );
  NOR2_X1 _16_ (
    .A1(_10_),
    .A2(_11_),
    .ZN(_03_)
  );
  AOI22_X1 _17_ (
    .A1(_08_),
    .A2(_10_),
    .B1(_03_),
    .B2(_09_),
    .ZN(_05_)
  );
  assign _07_ = b;
  assign _06_ = a;
  assign _04_ = CIN;
  assign S = _05_;
  assign C = _03_;
endmodule

module Half_adder(a, b, S, C);
  wire _0_;
  wire _1_;
  wire _2_;
  wire _3_;
  output C;
  output S;
  input a;
  input b;
  AND2_X1 _4_ (
    .A1(_3_),
    .A2(_2_),
    .ZN(_0_)
  );
  XOR2_X1 _5_ (
    .A(_3_),
    .B(_2_),
    .Z(_1_)
  );
  assign _3_ = b;
  assign _2_ = a;
  assign S = _1_;
  assign C = _0_;
endmodule

module STAGE1(A, B, pp_0, pp_1, pp_2, pp_3, pp_4, pp_5, pp_6, pp_7, pp_8, pp_9, pp_10, pp_11, pp_12, pp_13, pp_14, pp_15, pp_16, pp_17, pp_18, pp_19, pp_20, pp_21, pp_22, pp_23, pp_24, pp_25, pp_26, pp_27, pp_28, pp_29, pp_30);
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  wire _108_;
  wire _109_;
  wire _110_;
  wire _111_;
  wire _112_;
  wire _113_;
  wire _114_;
  wire _115_;
  wire _116_;
  wire _117_;
  wire _118_;
  wire _119_;
  wire _120_;
  wire _121_;
  wire _122_;
  wire _123_;
  wire _124_;
  wire _125_;
  wire _126_;
  wire _127_;
  wire _128_;
  wire _129_;
  wire _130_;
  wire _131_;
  wire _132_;
  wire _133_;
  wire _134_;
  wire _135_;
  wire _136_;
  wire _137_;
  wire _138_;
  wire _139_;
  wire _140_;
  wire _141_;
  wire _142_;
  wire _143_;
  wire _144_;
  wire _145_;
  wire _146_;
  wire _147_;
  wire _148_;
  wire _149_;
  wire _150_;
  wire _151_;
  wire _152_;
  wire _153_;
  wire _154_;
  wire _155_;
  wire _156_;
  wire _157_;
  wire _158_;
  wire _159_;
  wire _160_;
  wire _161_;
  wire _162_;
  wire _163_;
  wire _164_;
  wire _165_;
  wire _166_;
  wire _167_;
  wire _168_;
  wire _169_;
  wire _170_;
  wire _171_;
  wire _172_;
  wire _173_;
  wire _174_;
  wire _175_;
  wire _176_;
  wire _177_;
  wire _178_;
  wire _179_;
  wire _180_;
  wire _181_;
  wire _182_;
  wire _183_;
  wire _184_;
  wire _185_;
  wire _186_;
  wire _187_;
  wire _188_;
  wire _189_;
  wire _190_;
  wire _191_;
  wire _192_;
  wire _193_;
  wire _194_;
  wire _195_;
  wire _196_;
  wire _197_;
  wire _198_;
  wire _199_;
  wire _200_;
  wire _201_;
  wire _202_;
  wire _203_;
  wire _204_;
  wire _205_;
  wire _206_;
  wire _207_;
  wire _208_;
  wire _209_;
  wire _210_;
  wire _211_;
  wire _212_;
  wire _213_;
  wire _214_;
  wire _215_;
  wire _216_;
  wire _217_;
  wire _218_;
  wire _219_;
  wire _220_;
  wire _221_;
  wire _222_;
  wire _223_;
  wire _224_;
  wire _225_;
  wire _226_;
  wire _227_;
  wire _228_;
  wire _229_;
  wire _230_;
  wire _231_;
  wire _232_;
  wire _233_;
  wire _234_;
  wire _235_;
  wire _236_;
  wire _237_;
  wire _238_;
  wire _239_;
  wire _240_;
  wire _241_;
  wire _242_;
  wire _243_;
  wire _244_;
  wire _245_;
  wire _246_;
  wire _247_;
  wire _248_;
  wire _249_;
  wire _250_;
  wire _251_;
  wire _252_;
  wire _253_;
  wire _254_;
  wire _255_;
  wire _256_;
  wire _257_;
  wire _258_;
  wire _259_;
  wire _260_;
  wire _261_;
  wire _262_;
  wire _263_;
  wire _264_;
  wire _265_;
  wire _266_;
  wire _267_;
  wire _268_;
  wire _269_;
  wire _270_;
  wire _271_;
  wire _272_;
  wire _273_;
  wire _274_;
  wire _275_;
  wire _276_;
  wire _277_;
  wire _278_;
  wire _279_;
  wire _280_;
  wire _281_;
  wire _282_;
  wire _283_;
  wire _284_;
  wire _285_;
  wire _286_;
  wire _287_;
  wire _288_;
  wire _289_;
  wire _290_;
  wire _291_;
  wire _292_;
  wire _293_;
  wire _294_;
  wire _295_;
  wire _296_;
  wire _297_;
  wire _298_;
  wire _299_;
  wire _300_;
  wire _301_;
  wire _302_;
  wire _303_;
  wire _304_;
  wire _305_;
  wire _306_;
  wire _307_;
  wire _308_;
  wire _309_;
  wire _310_;
  wire _311_;
  wire _312_;
  wire _313_;
  wire _314_;
  wire _315_;
  wire _316_;
  wire _317_;
  wire _318_;
  wire _319_;
  wire _320_;
  wire _321_;
  wire _322_;
  wire _323_;
  wire _324_;
  wire _325_;
  wire _326_;
  wire _327_;
  wire _328_;
  wire _329_;
  wire _330_;
  wire _331_;
  wire _332_;
  wire _333_;
  wire _334_;
  wire _335_;
  wire _336_;
  wire _337_;
  wire _338_;
  wire _339_;
  wire _340_;
  wire _341_;
  wire _342_;
  wire _343_;
  wire _344_;
  wire _345_;
  wire _346_;
  wire _347_;
  wire _348_;
  wire _349_;
  wire _350_;
  wire _351_;
  wire _352_;
  wire _353_;
  wire _354_;
  wire _355_;
  wire _356_;
  wire _357_;
  wire _358_;
  wire _359_;
  wire _360_;
  wire _361_;
  wire _362_;
  wire _363_;
  wire _364_;
  wire _365_;
  wire _366_;
  wire _367_;
  wire _368_;
  wire _369_;
  wire _370_;
  wire _371_;
  wire _372_;
  wire _373_;
  wire _374_;
  wire _375_;
  wire _376_;
  wire _377_;
  wire _378_;
  wire _379_;
  wire _380_;
  wire _381_;
  wire _382_;
  wire _383_;
  wire _384_;
  wire _385_;
  wire _386_;
  wire _387_;
  wire _388_;
  wire _389_;
  wire _390_;
  wire _391_;
  wire _392_;
  wire _393_;
  wire _394_;
  wire _395_;
  wire _396_;
  wire _397_;
  wire _398_;
  wire _399_;
  wire _400_;
  wire _401_;
  wire _402_;
  wire _403_;
  wire _404_;
  wire _405_;
  wire _406_;
  wire _407_;
  wire _408_;
  wire _409_;
  wire _410_;
  wire _411_;
  wire _412_;
  wire _413_;
  wire _414_;
  wire _415_;
  wire _416_;
  wire _417_;
  wire _418_;
  wire _419_;
  wire _420_;
  wire _421_;
  wire _422_;
  wire _423_;
  wire _424_;
  wire _425_;
  wire _426_;
  wire _427_;
  wire _428_;
  wire _429_;
  wire _430_;
  wire _431_;
  wire _432_;
  wire _433_;
  input [15:0] A;
  input [15:0] B;
  output pp_0;
  output [1:0] pp_1;
  output [7:0] pp_10;
  wire pp_10_c1;
  wire pp_10_c2;
  wire pp_10_s1;
  wire pp_10_s2;
  output [7:0] pp_11;
  wire pp_11_c1;
  wire pp_11_c2;
  wire pp_11_s1;
  wire pp_11_s2;
  output [7:0] pp_12;
  wire pp_12_c1;
  wire pp_12_c2;
  wire pp_12_c3;
  wire pp_12_s1;
  wire pp_12_s2;
  wire pp_12_s3;
  output [7:0] pp_13;
  wire pp_13_c1;
  wire pp_13_c2;
  wire pp_13_c3;
  wire pp_13_s1;
  wire pp_13_s2;
  wire pp_13_s3;
  output [7:0] pp_14;
  wire pp_14_c1;
  wire pp_14_c2;
  wire pp_14_c3;
  wire pp_14_c4;
  wire pp_14_s1;
  wire pp_14_s2;
  wire pp_14_s3;
  wire pp_14_s4;
  output [7:0] pp_15;
  wire pp_15_c1;
  wire pp_15_c2;
  wire pp_15_c3;
  wire pp_15_c4;
  wire pp_15_s1;
  wire pp_15_s2;
  wire pp_15_s3;
  wire pp_15_s4;
  output [7:0] pp_16;
  wire pp_16_c1;
  wire pp_16_c2;
  wire pp_16_c3;
  wire pp_16_c4;
  wire pp_16_c5;
  wire pp_16_c6;
  wire pp_16_c7;
  wire pp_16_s1;
  wire pp_16_s2;
  wire pp_16_s3;
  wire pp_16_s4;
  output [7:0] pp_17;
  wire pp_17_c1;
  wire pp_17_c2;
  wire pp_17_c3;
  wire pp_17_c4;
  wire pp_17_c5;
  wire pp_17_c6;
  wire pp_17_c7;
  wire pp_17_s1;
  wire pp_17_s2;
  wire pp_17_s3;
  wire pp_17_s4;
  output [7:0] pp_18;
  wire pp_18_c1;
  wire pp_18_c2;
  wire pp_18_c3;
  wire pp_18_c4;
  wire pp_18_c5;
  wire pp_18_c6;
  wire pp_18_s1;
  wire pp_18_s2;
  wire pp_18_s3;
  output [7:0] pp_19;
  wire pp_19_c1;
  wire pp_19_c2;
  wire pp_19_c3;
  wire pp_19_c4;
  wire pp_19_c5;
  wire pp_19_s1;
  wire pp_19_s2;
  wire pp_19_s3;
  output [2:0] pp_2;
  output [7:0] pp_20;
  wire pp_20_c1;
  wire pp_20_c2;
  wire pp_20_c3;
  wire pp_20_c4;
  wire pp_20_s1;
  wire pp_20_s2;
  output [7:0] pp_21;
  wire pp_21_c1;
  wire pp_21_c2;
  wire pp_21_c3;
  wire pp_21_s1;
  wire pp_21_s2;
  output [7:0] pp_22;
  wire pp_22_c1;
  wire pp_22_c2;
  wire pp_22_s1;
  output [7:0] pp_23;
  wire pp_23_c;
  wire pp_23_s;
  output [7:0] pp_24;
  output [5:0] pp_25;
  output [4:0] pp_26;
  output [3:0] pp_27;
  output [2:0] pp_28;
  output [1:0] pp_29;
  output [3:0] pp_3;
  output pp_30;
  output [4:0] pp_4;
  output [5:0] pp_5;
  output [6:0] pp_6;
  output [7:0] pp_7;
  output [7:0] pp_8;
  wire pp_8_c;
  wire pp_8_s;
  output [7:0] pp_9;
  wire pp_9_c;
  wire pp_9_s;
  AND2_X1 _434_ (
    .A1(_162_),
    .A2(_146_),
    .ZN(_324_)
  );
  AND2_X1 _435_ (
    .A1(_162_),
    .A2(_153_),
    .ZN(_342_)
  );
  AND2_X1 _436_ (
    .A1(_146_),
    .A2(_169_),
    .ZN(_343_)
  );
  AND2_X1 _437_ (
    .A1(_162_),
    .A2(_154_),
    .ZN(_387_)
  );
  AND2_X1 _438_ (
    .A1(_153_),
    .A2(_169_),
    .ZN(_388_)
  );
  AND2_X1 _439_ (
    .A1(_146_),
    .A2(_170_),
    .ZN(_389_)
  );
  AND2_X1 _440_ (
    .A1(_162_),
    .A2(_155_),
    .ZN(_391_)
  );
  AND2_X1 _441_ (
    .A1(_169_),
    .A2(_154_),
    .ZN(_392_)
  );
  AND2_X1 _442_ (
    .A1(_153_),
    .A2(_170_),
    .ZN(_393_)
  );
  AND2_X1 _443_ (
    .A1(_146_),
    .A2(_171_),
    .ZN(_394_)
  );
  AND2_X1 _444_ (
    .A1(_162_),
    .A2(_156_),
    .ZN(_395_)
  );
  AND2_X1 _445_ (
    .A1(_169_),
    .A2(_155_),
    .ZN(_396_)
  );
  AND2_X1 _446_ (
    .A1(_154_),
    .A2(_170_),
    .ZN(_397_)
  );
  AND2_X1 _447_ (
    .A1(_153_),
    .A2(_171_),
    .ZN(_398_)
  );
  AND2_X1 _448_ (
    .A1(_146_),
    .A2(_172_),
    .ZN(_399_)
  );
  AND2_X1 _449_ (
    .A1(_162_),
    .A2(_157_),
    .ZN(_400_)
  );
  AND2_X1 _450_ (
    .A1(_169_),
    .A2(_156_),
    .ZN(_401_)
  );
  AND2_X1 _451_ (
    .A1(_170_),
    .A2(_155_),
    .ZN(_402_)
  );
  AND2_X1 _452_ (
    .A1(_154_),
    .A2(_171_),
    .ZN(_403_)
  );
  AND2_X1 _453_ (
    .A1(_153_),
    .A2(_172_),
    .ZN(_404_)
  );
  AND2_X1 _454_ (
    .A1(_146_),
    .A2(_173_),
    .ZN(_405_)
  );
  AND2_X1 _455_ (
    .A1(_162_),
    .A2(_158_),
    .ZN(_406_)
  );
  AND2_X1 _456_ (
    .A1(_169_),
    .A2(_157_),
    .ZN(_407_)
  );
  AND2_X1 _457_ (
    .A1(_170_),
    .A2(_156_),
    .ZN(_408_)
  );
  AND2_X1 _458_ (
    .A1(_155_),
    .A2(_171_),
    .ZN(_409_)
  );
  AND2_X1 _459_ (
    .A1(_154_),
    .A2(_172_),
    .ZN(_410_)
  );
  AND2_X1 _460_ (
    .A1(_153_),
    .A2(_173_),
    .ZN(_411_)
  );
  AND2_X1 _461_ (
    .A1(_146_),
    .A2(_174_),
    .ZN(_412_)
  );
  AND2_X1 _462_ (
    .A1(_162_),
    .A2(_159_),
    .ZN(_413_)
  );
  AND2_X1 _463_ (
    .A1(_169_),
    .A2(_158_),
    .ZN(_414_)
  );
  AND2_X1 _464_ (
    .A1(_170_),
    .A2(_157_),
    .ZN(_415_)
  );
  AND2_X1 _465_ (
    .A1(_171_),
    .A2(_156_),
    .ZN(_416_)
  );
  AND2_X1 _466_ (
    .A1(_155_),
    .A2(_172_),
    .ZN(_417_)
  );
  AND2_X1 _467_ (
    .A1(_154_),
    .A2(_173_),
    .ZN(_418_)
  );
  AND2_X1 _468_ (
    .A1(_153_),
    .A2(_174_),
    .ZN(_419_)
  );
  AND2_X1 _469_ (
    .A1(_146_),
    .A2(_175_),
    .ZN(_420_)
  );
  AND2_X1 _470_ (
    .A1(_170_),
    .A2(_158_),
    .ZN(_421_)
  );
  AND2_X1 _471_ (
    .A1(_171_),
    .A2(_157_),
    .ZN(_422_)
  );
  AND2_X1 _472_ (
    .A1(_156_),
    .A2(_172_),
    .ZN(_423_)
  );
  AND2_X1 _473_ (
    .A1(_155_),
    .A2(_173_),
    .ZN(_424_)
  );
  AND2_X1 _474_ (
    .A1(_154_),
    .A2(_174_),
    .ZN(_425_)
  );
  AND2_X1 _475_ (
    .A1(_153_),
    .A2(_175_),
    .ZN(_426_)
  );
  AND2_X1 _476_ (
    .A1(_146_),
    .A2(_176_),
    .ZN(_427_)
  );
  AND2_X1 _477_ (
    .A1(_172_),
    .A2(_157_),
    .ZN(_428_)
  );
  AND2_X1 _478_ (
    .A1(_156_),
    .A2(_173_),
    .ZN(_429_)
  );
  AND2_X1 _479_ (
    .A1(_155_),
    .A2(_174_),
    .ZN(_430_)
  );
  AND2_X1 _480_ (
    .A1(_154_),
    .A2(_175_),
    .ZN(_431_)
  );
  AND2_X1 _481_ (
    .A1(_153_),
    .A2(_176_),
    .ZN(_432_)
  );
  AND2_X1 _482_ (
    .A1(_146_),
    .A2(_177_),
    .ZN(_433_)
  );
  AND2_X1 _483_ (
    .A1(_156_),
    .A2(_174_),
    .ZN(_325_)
  );
  AND2_X1 _484_ (
    .A1(_155_),
    .A2(_175_),
    .ZN(_326_)
  );
  AND2_X1 _485_ (
    .A1(_154_),
    .A2(_176_),
    .ZN(_327_)
  );
  AND2_X1 _486_ (
    .A1(_153_),
    .A2(_177_),
    .ZN(_328_)
  );
  AND2_X1 _487_ (
    .A1(_146_),
    .A2(_163_),
    .ZN(_329_)
  );
  AND2_X1 _488_ (
    .A1(_155_),
    .A2(_176_),
    .ZN(_330_)
  );
  AND2_X1 _489_ (
    .A1(_154_),
    .A2(_177_),
    .ZN(_331_)
  );
  AND2_X1 _490_ (
    .A1(_153_),
    .A2(_163_),
    .ZN(_332_)
  );
  AND2_X1 _491_ (
    .A1(_146_),
    .A2(_164_),
    .ZN(_333_)
  );
  AND2_X1 _492_ (
    .A1(_154_),
    .A2(_163_),
    .ZN(_334_)
  );
  AND2_X1 _493_ (
    .A1(_153_),
    .A2(_164_),
    .ZN(_335_)
  );
  AND2_X1 _494_ (
    .A1(_146_),
    .A2(_165_),
    .ZN(_336_)
  );
  AND2_X1 _495_ (
    .A1(_153_),
    .A2(_165_),
    .ZN(_337_)
  );
  AND2_X1 _496_ (
    .A1(_146_),
    .A2(_166_),
    .ZN(_338_)
  );
  AND2_X1 _497_ (
    .A1(_146_),
    .A2(_167_),
    .ZN(_339_)
  );
  AND2_X1 _498_ (
    .A1(_155_),
    .A2(_168_),
    .ZN(_340_)
  );
  AND2_X1 _499_ (
    .A1(_156_),
    .A2(_168_),
    .ZN(_341_)
  );
  AND2_X1 _500_ (
    .A1(_159_),
    .A2(_166_),
    .ZN(_344_)
  );
  AND2_X1 _501_ (
    .A1(_158_),
    .A2(_167_),
    .ZN(_345_)
  );
  AND2_X1 _502_ (
    .A1(_157_),
    .A2(_168_),
    .ZN(_346_)
  );
  AND2_X1 _503_ (
    .A1(_166_),
    .A2(_160_),
    .ZN(_347_)
  );
  AND2_X1 _504_ (
    .A1(_159_),
    .A2(_167_),
    .ZN(_348_)
  );
  AND2_X1 _505_ (
    .A1(_158_),
    .A2(_168_),
    .ZN(_349_)
  );
  AND2_X1 _506_ (
    .A1(_164_),
    .A2(_148_),
    .ZN(_350_)
  );
  AND2_X1 _507_ (
    .A1(_165_),
    .A2(_147_),
    .ZN(_351_)
  );
  AND2_X1 _508_ (
    .A1(_166_),
    .A2(_161_),
    .ZN(_352_)
  );
  AND2_X1 _509_ (
    .A1(_167_),
    .A2(_160_),
    .ZN(_353_)
  );
  AND2_X1 _510_ (
    .A1(_159_),
    .A2(_168_),
    .ZN(_354_)
  );
  AND2_X1 _511_ (
    .A1(_164_),
    .A2(_149_),
    .ZN(_355_)
  );
  AND2_X1 _512_ (
    .A1(_165_),
    .A2(_148_),
    .ZN(_356_)
  );
  AND2_X1 _513_ (
    .A1(_166_),
    .A2(_147_),
    .ZN(_357_)
  );
  AND2_X1 _514_ (
    .A1(_167_),
    .A2(_161_),
    .ZN(_358_)
  );
  AND2_X1 _515_ (
    .A1(_168_),
    .A2(_160_),
    .ZN(_359_)
  );
  AND2_X1 _516_ (
    .A1(_177_),
    .A2(_152_),
    .ZN(_360_)
  );
  AND2_X1 _517_ (
    .A1(_163_),
    .A2(_151_),
    .ZN(_361_)
  );
  AND2_X1 _518_ (
    .A1(_164_),
    .A2(_150_),
    .ZN(_362_)
  );
  AND2_X1 _519_ (
    .A1(_165_),
    .A2(_149_),
    .ZN(_363_)
  );
  AND2_X1 _520_ (
    .A1(_166_),
    .A2(_148_),
    .ZN(_364_)
  );
  AND2_X1 _521_ (
    .A1(_167_),
    .A2(_147_),
    .ZN(_365_)
  );
  AND2_X1 _522_ (
    .A1(_168_),
    .A2(_161_),
    .ZN(_366_)
  );
  AND2_X1 _523_ (
    .A1(_163_),
    .A2(_152_),
    .ZN(_367_)
  );
  AND2_X1 _524_ (
    .A1(_164_),
    .A2(_151_),
    .ZN(_368_)
  );
  AND2_X1 _525_ (
    .A1(_165_),
    .A2(_150_),
    .ZN(_369_)
  );
  AND2_X1 _526_ (
    .A1(_166_),
    .A2(_149_),
    .ZN(_370_)
  );
  AND2_X1 _527_ (
    .A1(_167_),
    .A2(_148_),
    .ZN(_371_)
  );
  AND2_X1 _528_ (
    .A1(_168_),
    .A2(_147_),
    .ZN(_372_)
  );
  AND2_X1 _529_ (
    .A1(_164_),
    .A2(_152_),
    .ZN(_373_)
  );
  AND2_X1 _530_ (
    .A1(_165_),
    .A2(_151_),
    .ZN(_374_)
  );
  AND2_X1 _531_ (
    .A1(_166_),
    .A2(_150_),
    .ZN(_375_)
  );
  AND2_X1 _532_ (
    .A1(_167_),
    .A2(_149_),
    .ZN(_376_)
  );
  AND2_X1 _533_ (
    .A1(_168_),
    .A2(_148_),
    .ZN(_377_)
  );
  AND2_X1 _534_ (
    .A1(_165_),
    .A2(_152_),
    .ZN(_378_)
  );
  AND2_X1 _535_ (
    .A1(_166_),
    .A2(_151_),
    .ZN(_379_)
  );
  AND2_X1 _536_ (
    .A1(_167_),
    .A2(_150_),
    .ZN(_380_)
  );
  AND2_X1 _537_ (
    .A1(_168_),
    .A2(_149_),
    .ZN(_381_)
  );
  AND2_X1 _538_ (
    .A1(_166_),
    .A2(_152_),
    .ZN(_382_)
  );
  AND2_X1 _539_ (
    .A1(_167_),
    .A2(_151_),
    .ZN(_383_)
  );
  AND2_X1 _540_ (
    .A1(_168_),
    .A2(_150_),
    .ZN(_384_)
  );
  AND2_X1 _541_ (
    .A1(_167_),
    .A2(_152_),
    .ZN(_385_)
  );
  AND2_X1 _542_ (
    .A1(_168_),
    .A2(_151_),
    .ZN(_386_)
  );
  AND2_X1 _543_ (
    .A1(_168_),
    .A2(_152_),
    .ZN(_390_)
  );
  AND2_X1 _544_ (
    .A1(_162_),
    .A2(_160_),
    .ZN(_178_)
  );
  AND2_X1 _545_ (
    .A1(_169_),
    .A2(_159_),
    .ZN(_179_)
  );
  AND2_X1 _546_ (
    .A1(_162_),
    .A2(_161_),
    .ZN(_180_)
  );
  AND2_X1 _547_ (
    .A1(_169_),
    .A2(_160_),
    .ZN(_181_)
  );
  AND2_X1 _548_ (
    .A1(_170_),
    .A2(_159_),
    .ZN(_182_)
  );
  AND2_X1 _549_ (
    .A1(_171_),
    .A2(_158_),
    .ZN(_183_)
  );
  AND2_X1 _550_ (
    .A1(_162_),
    .A2(_147_),
    .ZN(_184_)
  );
  AND2_X1 _551_ (
    .A1(_169_),
    .A2(_161_),
    .ZN(_185_)
  );
  AND2_X1 _552_ (
    .A1(_170_),
    .A2(_160_),
    .ZN(_186_)
  );
  AND2_X1 _553_ (
    .A1(_171_),
    .A2(_159_),
    .ZN(_187_)
  );
  AND2_X1 _554_ (
    .A1(_172_),
    .A2(_158_),
    .ZN(_188_)
  );
  AND2_X1 _555_ (
    .A1(_157_),
    .A2(_173_),
    .ZN(_189_)
  );
  AND2_X1 _556_ (
    .A1(_162_),
    .A2(_148_),
    .ZN(_190_)
  );
  AND2_X1 _557_ (
    .A1(_169_),
    .A2(_147_),
    .ZN(_191_)
  );
  AND2_X1 _558_ (
    .A1(_170_),
    .A2(_161_),
    .ZN(_192_)
  );
  AND2_X1 _559_ (
    .A1(_171_),
    .A2(_160_),
    .ZN(_193_)
  );
  AND2_X1 _560_ (
    .A1(_172_),
    .A2(_159_),
    .ZN(_194_)
  );
  AND2_X1 _561_ (
    .A1(_173_),
    .A2(_158_),
    .ZN(_195_)
  );
  AND2_X1 _562_ (
    .A1(_157_),
    .A2(_174_),
    .ZN(_196_)
  );
  AND2_X1 _563_ (
    .A1(_156_),
    .A2(_175_),
    .ZN(_197_)
  );
  AND2_X1 _564_ (
    .A1(_162_),
    .A2(_149_),
    .ZN(_198_)
  );
  AND2_X1 _565_ (
    .A1(_169_),
    .A2(_148_),
    .ZN(_199_)
  );
  AND2_X1 _566_ (
    .A1(_170_),
    .A2(_147_),
    .ZN(_200_)
  );
  AND2_X1 _567_ (
    .A1(_171_),
    .A2(_161_),
    .ZN(_201_)
  );
  AND2_X1 _568_ (
    .A1(_172_),
    .A2(_160_),
    .ZN(_202_)
  );
  AND2_X1 _569_ (
    .A1(_173_),
    .A2(_159_),
    .ZN(_203_)
  );
  AND2_X1 _570_ (
    .A1(_158_),
    .A2(_174_),
    .ZN(_204_)
  );
  AND2_X1 _571_ (
    .A1(_157_),
    .A2(_175_),
    .ZN(_205_)
  );
  AND2_X1 _572_ (
    .A1(_156_),
    .A2(_176_),
    .ZN(_206_)
  );
  AND2_X1 _573_ (
    .A1(_155_),
    .A2(_177_),
    .ZN(_207_)
  );
  AND2_X1 _574_ (
    .A1(_162_),
    .A2(_150_),
    .ZN(_208_)
  );
  AND2_X1 _575_ (
    .A1(_169_),
    .A2(_149_),
    .ZN(_209_)
  );
  AND2_X1 _576_ (
    .A1(_170_),
    .A2(_148_),
    .ZN(_210_)
  );
  AND2_X1 _577_ (
    .A1(_171_),
    .A2(_147_),
    .ZN(_211_)
  );
  AND2_X1 _578_ (
    .A1(_172_),
    .A2(_161_),
    .ZN(_212_)
  );
  AND2_X1 _579_ (
    .A1(_173_),
    .A2(_160_),
    .ZN(_213_)
  );
  AND2_X1 _580_ (
    .A1(_174_),
    .A2(_159_),
    .ZN(_214_)
  );
  AND2_X1 _581_ (
    .A1(_158_),
    .A2(_175_),
    .ZN(_215_)
  );
  AND2_X1 _582_ (
    .A1(_157_),
    .A2(_176_),
    .ZN(_216_)
  );
  AND2_X1 _583_ (
    .A1(_156_),
    .A2(_177_),
    .ZN(_217_)
  );
  AND2_X1 _584_ (
    .A1(_155_),
    .A2(_163_),
    .ZN(_218_)
  );
  AND2_X1 _585_ (
    .A1(_154_),
    .A2(_164_),
    .ZN(_219_)
  );
  AND2_X1 _586_ (
    .A1(_162_),
    .A2(_151_),
    .ZN(_220_)
  );
  AND2_X1 _587_ (
    .A1(_169_),
    .A2(_150_),
    .ZN(_221_)
  );
  AND2_X1 _588_ (
    .A1(_170_),
    .A2(_149_),
    .ZN(_222_)
  );
  AND2_X1 _589_ (
    .A1(_171_),
    .A2(_148_),
    .ZN(_223_)
  );
  AND2_X1 _590_ (
    .A1(_172_),
    .A2(_147_),
    .ZN(_224_)
  );
  AND2_X1 _591_ (
    .A1(_173_),
    .A2(_161_),
    .ZN(_225_)
  );
  AND2_X1 _592_ (
    .A1(_174_),
    .A2(_160_),
    .ZN(_226_)
  );
  AND2_X1 _593_ (
    .A1(_159_),
    .A2(_175_),
    .ZN(_227_)
  );
  AND2_X1 _594_ (
    .A1(_158_),
    .A2(_176_),
    .ZN(_228_)
  );
  AND2_X1 _595_ (
    .A1(_157_),
    .A2(_177_),
    .ZN(_229_)
  );
  AND2_X1 _596_ (
    .A1(_156_),
    .A2(_163_),
    .ZN(_230_)
  );
  AND2_X1 _597_ (
    .A1(_155_),
    .A2(_164_),
    .ZN(_231_)
  );
  AND2_X1 _598_ (
    .A1(_154_),
    .A2(_165_),
    .ZN(_232_)
  );
  AND2_X1 _599_ (
    .A1(_153_),
    .A2(_166_),
    .ZN(_233_)
  );
  AND2_X1 _600_ (
    .A1(_162_),
    .A2(_152_),
    .ZN(_234_)
  );
  AND2_X1 _601_ (
    .A1(_169_),
    .A2(_151_),
    .ZN(_235_)
  );
  AND2_X1 _602_ (
    .A1(_170_),
    .A2(_150_),
    .ZN(_236_)
  );
  AND2_X1 _603_ (
    .A1(_171_),
    .A2(_149_),
    .ZN(_237_)
  );
  AND2_X1 _604_ (
    .A1(_172_),
    .A2(_148_),
    .ZN(_238_)
  );
  AND2_X1 _605_ (
    .A1(_173_),
    .A2(_147_),
    .ZN(_239_)
  );
  AND2_X1 _606_ (
    .A1(_174_),
    .A2(_161_),
    .ZN(_240_)
  );
  AND2_X1 _607_ (
    .A1(_175_),
    .A2(_160_),
    .ZN(_241_)
  );
  AND2_X1 _608_ (
    .A1(_159_),
    .A2(_176_),
    .ZN(_242_)
  );
  AND2_X1 _609_ (
    .A1(_158_),
    .A2(_177_),
    .ZN(_243_)
  );
  AND2_X1 _610_ (
    .A1(_157_),
    .A2(_163_),
    .ZN(_244_)
  );
  AND2_X1 _611_ (
    .A1(_156_),
    .A2(_164_),
    .ZN(_245_)
  );
  AND2_X1 _612_ (
    .A1(_155_),
    .A2(_165_),
    .ZN(_246_)
  );
  AND2_X1 _613_ (
    .A1(_154_),
    .A2(_166_),
    .ZN(_247_)
  );
  AND2_X1 _614_ (
    .A1(_153_),
    .A2(_167_),
    .ZN(_248_)
  );
  AND2_X1 _615_ (
    .A1(_146_),
    .A2(_168_),
    .ZN(_249_)
  );
  AND2_X1 _616_ (
    .A1(_169_),
    .A2(_152_),
    .ZN(_250_)
  );
  AND2_X1 _617_ (
    .A1(_170_),
    .A2(_151_),
    .ZN(_251_)
  );
  AND2_X1 _618_ (
    .A1(_171_),
    .A2(_150_),
    .ZN(_252_)
  );
  AND2_X1 _619_ (
    .A1(_172_),
    .A2(_149_),
    .ZN(_253_)
  );
  AND2_X1 _620_ (
    .A1(_173_),
    .A2(_148_),
    .ZN(_254_)
  );
  AND2_X1 _621_ (
    .A1(_174_),
    .A2(_147_),
    .ZN(_255_)
  );
  AND2_X1 _622_ (
    .A1(_175_),
    .A2(_161_),
    .ZN(_256_)
  );
  AND2_X1 _623_ (
    .A1(_176_),
    .A2(_160_),
    .ZN(_257_)
  );
  AND2_X1 _624_ (
    .A1(_159_),
    .A2(_177_),
    .ZN(_258_)
  );
  AND2_X1 _625_ (
    .A1(_158_),
    .A2(_163_),
    .ZN(_259_)
  );
  AND2_X1 _626_ (
    .A1(_157_),
    .A2(_164_),
    .ZN(_260_)
  );
  AND2_X1 _627_ (
    .A1(_156_),
    .A2(_165_),
    .ZN(_261_)
  );
  AND2_X1 _628_ (
    .A1(_155_),
    .A2(_166_),
    .ZN(_262_)
  );
  AND2_X1 _629_ (
    .A1(_154_),
    .A2(_167_),
    .ZN(_263_)
  );
  AND2_X1 _630_ (
    .A1(_153_),
    .A2(_168_),
    .ZN(_264_)
  );
  AND2_X1 _631_ (
    .A1(_170_),
    .A2(_152_),
    .ZN(_265_)
  );
  AND2_X1 _632_ (
    .A1(_171_),
    .A2(_151_),
    .ZN(_266_)
  );
  AND2_X1 _633_ (
    .A1(_172_),
    .A2(_150_),
    .ZN(_267_)
  );
  AND2_X1 _634_ (
    .A1(_173_),
    .A2(_149_),
    .ZN(_268_)
  );
  AND2_X1 _635_ (
    .A1(_174_),
    .A2(_148_),
    .ZN(_269_)
  );
  AND2_X1 _636_ (
    .A1(_175_),
    .A2(_147_),
    .ZN(_270_)
  );
  AND2_X1 _637_ (
    .A1(_176_),
    .A2(_161_),
    .ZN(_271_)
  );
  AND2_X1 _638_ (
    .A1(_177_),
    .A2(_160_),
    .ZN(_272_)
  );
  AND2_X1 _639_ (
    .A1(_159_),
    .A2(_163_),
    .ZN(_273_)
  );
  AND2_X1 _640_ (
    .A1(_158_),
    .A2(_164_),
    .ZN(_274_)
  );
  AND2_X1 _641_ (
    .A1(_157_),
    .A2(_165_),
    .ZN(_275_)
  );
  AND2_X1 _642_ (
    .A1(_156_),
    .A2(_166_),
    .ZN(_276_)
  );
  AND2_X1 _643_ (
    .A1(_155_),
    .A2(_167_),
    .ZN(_277_)
  );
  AND2_X1 _644_ (
    .A1(_154_),
    .A2(_168_),
    .ZN(_278_)
  );
  AND2_X1 _645_ (
    .A1(_171_),
    .A2(_152_),
    .ZN(_279_)
  );
  AND2_X1 _646_ (
    .A1(_172_),
    .A2(_151_),
    .ZN(_280_)
  );
  AND2_X1 _647_ (
    .A1(_173_),
    .A2(_150_),
    .ZN(_281_)
  );
  AND2_X1 _648_ (
    .A1(_174_),
    .A2(_149_),
    .ZN(_282_)
  );
  AND2_X1 _649_ (
    .A1(_175_),
    .A2(_148_),
    .ZN(_283_)
  );
  AND2_X1 _650_ (
    .A1(_176_),
    .A2(_147_),
    .ZN(_284_)
  );
  AND2_X1 _651_ (
    .A1(_177_),
    .A2(_161_),
    .ZN(_285_)
  );
  AND2_X1 _652_ (
    .A1(_163_),
    .A2(_160_),
    .ZN(_286_)
  );
  AND2_X1 _653_ (
    .A1(_159_),
    .A2(_164_),
    .ZN(_287_)
  );
  AND2_X1 _654_ (
    .A1(_158_),
    .A2(_165_),
    .ZN(_288_)
  );
  AND2_X1 _655_ (
    .A1(_157_),
    .A2(_166_),
    .ZN(_289_)
  );
  AND2_X1 _656_ (
    .A1(_156_),
    .A2(_167_),
    .ZN(_290_)
  );
  AND2_X1 _657_ (
    .A1(_172_),
    .A2(_152_),
    .ZN(_291_)
  );
  AND2_X1 _658_ (
    .A1(_173_),
    .A2(_151_),
    .ZN(_292_)
  );
  AND2_X1 _659_ (
    .A1(_174_),
    .A2(_150_),
    .ZN(_293_)
  );
  AND2_X1 _660_ (
    .A1(_175_),
    .A2(_149_),
    .ZN(_294_)
  );
  AND2_X1 _661_ (
    .A1(_176_),
    .A2(_148_),
    .ZN(_295_)
  );
  AND2_X1 _662_ (
    .A1(_177_),
    .A2(_147_),
    .ZN(_296_)
  );
  AND2_X1 _663_ (
    .A1(_163_),
    .A2(_161_),
    .ZN(_297_)
  );
  AND2_X1 _664_ (
    .A1(_164_),
    .A2(_160_),
    .ZN(_298_)
  );
  AND2_X1 _665_ (
    .A1(_159_),
    .A2(_165_),
    .ZN(_299_)
  );
  AND2_X1 _666_ (
    .A1(_158_),
    .A2(_166_),
    .ZN(_300_)
  );
  AND2_X1 _667_ (
    .A1(_157_),
    .A2(_167_),
    .ZN(_301_)
  );
  AND2_X1 _668_ (
    .A1(_173_),
    .A2(_152_),
    .ZN(_302_)
  );
  AND2_X1 _669_ (
    .A1(_174_),
    .A2(_151_),
    .ZN(_303_)
  );
  AND2_X1 _670_ (
    .A1(_175_),
    .A2(_150_),
    .ZN(_304_)
  );
  AND2_X1 _671_ (
    .A1(_176_),
    .A2(_149_),
    .ZN(_305_)
  );
  AND2_X1 _672_ (
    .A1(_177_),
    .A2(_148_),
    .ZN(_306_)
  );
  AND2_X1 _673_ (
    .A1(_163_),
    .A2(_147_),
    .ZN(_307_)
  );
  AND2_X1 _674_ (
    .A1(_164_),
    .A2(_161_),
    .ZN(_308_)
  );
  AND2_X1 _675_ (
    .A1(_165_),
    .A2(_160_),
    .ZN(_309_)
  );
  AND2_X1 _676_ (
    .A1(_174_),
    .A2(_152_),
    .ZN(_310_)
  );
  AND2_X1 _677_ (
    .A1(_175_),
    .A2(_151_),
    .ZN(_311_)
  );
  AND2_X1 _678_ (
    .A1(_176_),
    .A2(_150_),
    .ZN(_312_)
  );
  AND2_X1 _679_ (
    .A1(_177_),
    .A2(_149_),
    .ZN(_313_)
  );
  AND2_X1 _680_ (
    .A1(_163_),
    .A2(_148_),
    .ZN(_314_)
  );
  AND2_X1 _681_ (
    .A1(_164_),
    .A2(_147_),
    .ZN(_315_)
  );
  AND2_X1 _682_ (
    .A1(_165_),
    .A2(_161_),
    .ZN(_316_)
  );
  AND2_X1 _683_ (
    .A1(_175_),
    .A2(_152_),
    .ZN(_317_)
  );
  AND2_X1 _684_ (
    .A1(_176_),
    .A2(_151_),
    .ZN(_318_)
  );
  AND2_X1 _685_ (
    .A1(_177_),
    .A2(_150_),
    .ZN(_319_)
  );
  AND2_X1 _686_ (
    .A1(_163_),
    .A2(_149_),
    .ZN(_320_)
  );
  AND2_X1 _687_ (
    .A1(_176_),
    .A2(_152_),
    .ZN(_321_)
  );
  AND2_X1 _688_ (
    .A1(_177_),
    .A2(_151_),
    .ZN(_322_)
  );
  AND2_X1 _689_ (
    .A1(_163_),
    .A2(_150_),
    .ZN(_323_)
  );
  ACCI1 ACCI1_pp_10 (
    .C(pp_10_c1),
    .S(pp_10_s1),
    .a(_006_),
    .b(_007_),
    .c(_008_),
    .d(_009_)
  );
  ACCI1 ACCI1_pp_11_1 (
    .C(pp_11_c1),
    .S(pp_11_s1),
    .a(_012_),
    .b(_013_),
    .c(_014_),
    .d(_015_)
  );
  ACCI1 ACCI1_pp_11_2 (
    .C(pp_11_c2),
    .S(pp_11_s2),
    .a(_016_),
    .b(_017_),
    .c(_018_),
    .d(_019_)
  );
  ACCI1 ACCI1_pp_12_1 (
    .C(pp_12_c1),
    .S(pp_12_s1),
    .a(_020_),
    .b(_021_),
    .c(_022_),
    .d(_023_)
  );
  ACCI1 ACCI1_pp_12_2 (
    .C(pp_12_c2),
    .S(pp_12_s2),
    .a(_024_),
    .b(_025_),
    .c(_026_),
    .d(_027_)
  );
  ACCI1 ACCI1_pp_13_1 (
    .C(pp_13_c1),
    .S(pp_13_s1),
    .a(_030_),
    .b(_031_),
    .c(_032_),
    .d(_033_)
  );
  ACCI1 ACCI1_pp_13_2 (
    .C(pp_13_c2),
    .S(pp_13_s2),
    .a(_034_),
    .b(_035_),
    .c(_036_),
    .d(_037_)
  );
  ACCI1 ACCI1_pp_13_3 (
    .C(pp_13_c3),
    .S(pp_13_s3),
    .a(_038_),
    .b(_039_),
    .c(_040_),
    .d(_041_)
  );
  ACCI1 ACCI1_pp_14_1 (
    .C(pp_14_c1),
    .S(pp_14_s1),
    .a(_042_),
    .b(_043_),
    .c(_044_),
    .d(_045_)
  );
  ACCI1 ACCI1_pp_14_2 (
    .C(pp_14_c2),
    .S(pp_14_s2),
    .a(_046_),
    .b(_047_),
    .c(_048_),
    .d(_049_)
  );
  ACCI1 ACCI1_pp_14_3 (
    .C(pp_14_c3),
    .S(pp_14_s3),
    .a(_050_),
    .b(_051_),
    .c(_052_),
    .d(_053_)
  );
  ACCI1 ACCI1_pp_15_1 (
    .C(pp_15_c1),
    .S(pp_15_s1),
    .a(_056_),
    .b(_057_),
    .c(_058_),
    .d(_059_)
  );
  ACCI1 ACCI1_pp_15_2 (
    .C(pp_15_c2),
    .S(pp_15_s2),
    .a(_060_),
    .b(_061_),
    .c(_062_),
    .d(_063_)
  );
  ACCI1 ACCI1_pp_15_3 (
    .C(pp_15_c3),
    .S(pp_15_s3),
    .a(_064_),
    .b(_065_),
    .c(_066_),
    .d(_067_)
  );
  ACCI1 ACCI1_pp_15_4 (
    .C(pp_15_c4),
    .S(pp_15_s4),
    .a(_068_),
    .b(_069_),
    .c(_070_),
    .d(_071_)
  );
  ACCI1 ACCI1_pp_9 (
    .C(pp_9_c),
    .S(pp_9_s),
    .a(_002_),
    .b(_003_),
    .c(_004_),
    .d(_005_)
  );
  E_4_2 E_4_2_pp_16_1 (
    .C(pp_16_c1),
    .CIN(1'h0),
    .COUT(pp_16_c2),
    .S(pp_16_s1),
    .a(_072_),
    .b(_073_),
    .c(_074_),
    .d(_075_)
  );
  E_4_2 E_4_2_pp_16_2 (
    .C(pp_16_c3),
    .CIN(1'h0),
    .COUT(pp_16_c4),
    .S(pp_16_s2),
    .a(_076_),
    .b(_077_),
    .c(_078_),
    .d(_079_)
  );
  E_4_2 E_4_2_pp_16_3 (
    .C(pp_16_c5),
    .CIN(1'h0),
    .COUT(pp_16_c6),
    .S(pp_16_s3),
    .a(_080_),
    .b(_081_),
    .c(_082_),
    .d(_083_)
  );
  E_4_2 E_4_2_pp_17_1 (
    .C(pp_17_c1),
    .CIN(pp_16_c2),
    .COUT(pp_17_c2),
    .S(pp_17_s1),
    .a(_087_),
    .b(_088_),
    .c(_089_),
    .d(_090_)
  );
  E_4_2 E_4_2_pp_17_2 (
    .C(pp_17_c3),
    .CIN(pp_16_c4),
    .COUT(pp_17_c4),
    .S(pp_17_s2),
    .a(_091_),
    .b(_092_),
    .c(_093_),
    .d(_094_)
  );
  E_4_2 E_4_2_pp_17_3 (
    .C(pp_17_c5),
    .CIN(pp_16_c6),
    .COUT(pp_17_c6),
    .S(pp_17_s3),
    .a(_095_),
    .b(_096_),
    .c(_097_),
    .d(_098_)
  );
  E_4_2 E_4_2_pp_18_1 (
    .C(pp_18_c1),
    .CIN(pp_17_c2),
    .COUT(pp_18_c2),
    .S(pp_18_s1),
    .a(_101_),
    .b(_102_),
    .c(_103_),
    .d(_104_)
  );
  E_4_2 E_4_2_pp_18_2 (
    .C(pp_18_c3),
    .CIN(pp_17_c4),
    .COUT(pp_18_c4),
    .S(pp_18_s2),
    .a(_105_),
    .b(_106_),
    .c(_107_),
    .d(_108_)
  );
  E_4_2 E_4_2_pp_18_3 (
    .C(pp_18_c5),
    .CIN(pp_17_c6),
    .COUT(pp_18_c6),
    .S(pp_18_s3),
    .a(_109_),
    .b(_110_),
    .c(_111_),
    .d(_112_)
  );
  E_4_2 E_4_2_pp_19_1 (
    .C(pp_19_c1),
    .CIN(pp_18_c2),
    .COUT(pp_19_c2),
    .S(pp_19_s1),
    .a(_113_),
    .b(_114_),
    .c(_115_),
    .d(_116_)
  );
  E_4_2 E_4_2_pp_19_2 (
    .C(pp_19_c3),
    .CIN(pp_18_c4),
    .COUT(pp_19_c4),
    .S(pp_19_s2),
    .a(_117_),
    .b(_118_),
    .c(_119_),
    .d(_120_)
  );
  E_4_2 E_4_2_pp_20_1 (
    .C(pp_20_c1),
    .CIN(pp_19_c2),
    .COUT(pp_20_c2),
    .S(pp_20_s1),
    .a(_124_),
    .b(_125_),
    .c(_126_),
    .d(_127_)
  );
  E_4_2 E_4_2_pp_20_2 (
    .C(pp_20_c3),
    .CIN(pp_19_c4),
    .COUT(pp_20_c4),
    .S(pp_20_s2),
    .a(_128_),
    .b(_129_),
    .c(_130_),
    .d(_131_)
  );
  E_4_2 E_4_2_pp_21_1 (
    .C(pp_21_c1),
    .CIN(pp_20_c2),
    .COUT(pp_21_c2),
    .S(pp_21_s1),
    .a(_132_),
    .b(_133_),
    .c(_134_),
    .d(_135_)
  );
  E_4_2 E_4_2_pp_22 (
    .C(pp_22_c1),
    .CIN(pp_21_c2),
    .COUT(pp_22_c2),
    .S(pp_22_s1),
    .a(_139_),
    .b(_140_),
    .c(_141_),
    .d(_142_)
  );
  Full_adder Full_adder_pp_16_4 (
    .C(pp_16_c7),
    .CIN(_086_),
    .S(pp_16_s4),
    .a(_084_),
    .b(_085_)
  );
  Full_adder Full_adder_pp_19 (
    .C(pp_19_c5),
    .CIN(_123_),
    .S(pp_19_s3),
    .a(_121_),
    .b(_122_)
  );
  Full_adder Full_adder_pp_21 (
    .C(pp_21_c3),
    .CIN(_138_),
    .S(pp_21_s2),
    .a(_136_),
    .b(_137_)
  );
  Full_adder Full_adder_pp_23 (
    .C(pp_23_c),
    .CIN(_145_),
    .S(pp_23_s),
    .a(_143_),
    .b(_144_)
  );
  Half_adder Half_adder_pp_10 (
    .C(pp_10_c2),
    .S(pp_10_s2),
    .a(_010_),
    .b(_011_)
  );
  Half_adder Half_adder_pp_12 (
    .C(pp_12_c3),
    .S(pp_12_s3),
    .a(_028_),
    .b(_029_)
  );
  Half_adder Half_adder_pp_14 (
    .C(pp_14_c4),
    .S(pp_14_s4),
    .a(_054_),
    .b(_055_)
  );
  Half_adder Half_adder_pp_17 (
    .C(pp_17_c7),
    .S(pp_17_s4),
    .a(_099_),
    .b(_100_)
  );
  Half_adder Half_adder_pp_8 (
    .C(pp_8_c),
    .S(pp_8_s),
    .a(_000_),
    .b(_001_)
  );
  assign { pp_10[3], pp_10[1:0] } = { pp_9_c, pp_10_s1, pp_10_s2 };
  assign pp_11[3:0] = { pp_10_c2, pp_10_c1, pp_11_s1, pp_11_s2 };
  assign pp_12[4:0] = { pp_12_s1, pp_11_c2, pp_11_c1, pp_12_s2, pp_12_s3 };
  assign { pp_13[7], pp_13[4:0] } = { pp_12_c3, pp_13_s3, pp_12_c2, pp_12_c1, pp_13_s1, pp_13_s2 };
  assign { pp_14[7], pp_14[5:0] } = { pp_13_c3, pp_14_s4, pp_14_s3, pp_13_c2, pp_13_c1, pp_14_s1, pp_14_s2 };
  assign pp_15 = { pp_14_c4, pp_14_c3, pp_15_s4, pp_15_s3, pp_14_c2, pp_14_c1, pp_15_s1, pp_15_s2 };
  assign pp_16 = { pp_16_s4, pp_15_c4, pp_16_s3, pp_15_c3, pp_16_s2, pp_15_c2, pp_16_s1, pp_15_c1 };
  assign pp_17 = { pp_17_s4, pp_16_c7, pp_17_s3, pp_16_c5, pp_17_s2, pp_16_c3, pp_17_s1, pp_16_c1 };
  assign pp_18[6:0] = { pp_18_s3, pp_17_c5, pp_17_c7, pp_17_c3, pp_18_s2, pp_17_c1, pp_18_s1 };
  assign pp_19[6:0] = { pp_18_c6, pp_19_s3, pp_18_c5, pp_18_c3, pp_19_s2, pp_18_c1, pp_19_s1 };
  assign pp_20[4:0] = { pp_19_c5, pp_19_c3, pp_20_s2, pp_19_c1, pp_20_s1 };
  assign pp_21[4:0] = { pp_20_c4, pp_20_c3, pp_21_s2, pp_20_c1, pp_21_s1 };
  assign { pp_22[4], pp_22[1:0] } = { pp_21_c3, pp_21_c1, pp_22_s1 };
  assign { pp_23[4], pp_23[1:0] } = { pp_22_c2, pp_22_c1, pp_23_s };
  assign pp_24[0] = pp_23_c;
  assign pp_8[0] = pp_8_s;
  assign { pp_9[3], pp_9[0] } = { pp_8_c, pp_9_s };
  assign _162_ = B[0];
  assign _146_ = A[0];
  assign pp_0 = _324_;
  assign _153_ = A[1];
  assign pp_1[0] = _342_;
  assign _169_ = B[1];
  assign pp_1[1] = _343_;
  assign _154_ = A[2];
  assign pp_2[0] = _387_;
  assign pp_2[1] = _388_;
  assign _170_ = B[2];
  assign pp_2[2] = _389_;
  assign _155_ = A[3];
  assign pp_3[0] = _391_;
  assign pp_3[1] = _392_;
  assign pp_3[2] = _393_;
  assign _171_ = B[3];
  assign pp_3[3] = _394_;
  assign _156_ = A[4];
  assign pp_4[0] = _395_;
  assign pp_4[1] = _396_;
  assign pp_4[2] = _397_;
  assign pp_4[3] = _398_;
  assign _172_ = B[4];
  assign pp_4[4] = _399_;
  assign _157_ = A[5];
  assign pp_5[0] = _400_;
  assign pp_5[1] = _401_;
  assign pp_5[2] = _402_;
  assign pp_5[3] = _403_;
  assign pp_5[4] = _404_;
  assign _173_ = B[5];
  assign pp_5[5] = _405_;
  assign _158_ = A[6];
  assign pp_6[0] = _406_;
  assign pp_6[1] = _407_;
  assign pp_6[2] = _408_;
  assign pp_6[3] = _409_;
  assign pp_6[4] = _410_;
  assign pp_6[5] = _411_;
  assign _174_ = B[6];
  assign pp_6[6] = _412_;
  assign _159_ = A[7];
  assign pp_7[0] = _413_;
  assign pp_7[1] = _414_;
  assign pp_7[2] = _415_;
  assign pp_7[3] = _416_;
  assign pp_7[4] = _417_;
  assign pp_7[5] = _418_;
  assign pp_7[6] = _419_;
  assign _175_ = B[7];
  assign pp_7[7] = _420_;
  assign pp_8[1] = _421_;
  assign pp_8[2] = _422_;
  assign pp_8[3] = _423_;
  assign pp_8[4] = _424_;
  assign pp_8[5] = _425_;
  assign pp_8[6] = _426_;
  assign _176_ = B[8];
  assign pp_8[7] = _427_;
  assign pp_9[1] = _428_;
  assign pp_9[2] = _429_;
  assign pp_9[4] = _430_;
  assign pp_9[5] = _431_;
  assign pp_9[6] = _432_;
  assign _177_ = B[9];
  assign pp_9[7] = _433_;
  assign pp_10[2] = _325_;
  assign pp_10[4] = _326_;
  assign pp_10[5] = _327_;
  assign pp_10[6] = _328_;
  assign _163_ = B[10];
  assign pp_10[7] = _329_;
  assign pp_11[4] = _330_;
  assign pp_11[5] = _331_;
  assign pp_11[6] = _332_;
  assign _164_ = B[11];
  assign pp_11[7] = _333_;
  assign pp_12[5] = _334_;
  assign pp_12[6] = _335_;
  assign _165_ = B[12];
  assign pp_12[7] = _336_;
  assign pp_13[5] = _337_;
  assign _166_ = B[13];
  assign pp_13[6] = _338_;
  assign _167_ = B[14];
  assign pp_14[6] = _339_;
  assign _168_ = B[15];
  assign pp_18[7] = _340_;
  assign pp_19[7] = _341_;
  assign pp_20[5] = _344_;
  assign pp_20[6] = _345_;
  assign pp_20[7] = _346_;
  assign _160_ = A[8];
  assign pp_21[5] = _347_;
  assign pp_21[6] = _348_;
  assign pp_21[7] = _349_;
  assign _148_ = A[11];
  assign pp_22[2] = _350_;
  assign _147_ = A[10];
  assign pp_22[3] = _351_;
  assign _161_ = A[9];
  assign pp_22[5] = _352_;
  assign pp_22[6] = _353_;
  assign pp_22[7] = _354_;
  assign _149_ = A[12];
  assign pp_23[2] = _355_;
  assign pp_23[3] = _356_;
  assign pp_23[5] = _357_;
  assign pp_23[6] = _358_;
  assign pp_23[7] = _359_;
  assign _152_ = A[15];
  assign pp_24[1] = _360_;
  assign _151_ = A[14];
  assign pp_24[2] = _361_;
  assign _150_ = A[13];
  assign pp_24[3] = _362_;
  assign pp_24[4] = _363_;
  assign pp_24[5] = _364_;
  assign pp_24[6] = _365_;
  assign pp_24[7] = _366_;
  assign pp_25[0] = _367_;
  assign pp_25[1] = _368_;
  assign pp_25[2] = _369_;
  assign pp_25[3] = _370_;
  assign pp_25[4] = _371_;
  assign pp_25[5] = _372_;
  assign pp_26[0] = _373_;
  assign pp_26[1] = _374_;
  assign pp_26[2] = _375_;
  assign pp_26[3] = _376_;
  assign pp_26[4] = _377_;
  assign pp_27[0] = _378_;
  assign pp_27[1] = _379_;
  assign pp_27[2] = _380_;
  assign pp_27[3] = _381_;
  assign pp_28[0] = _382_;
  assign pp_28[1] = _383_;
  assign pp_28[2] = _384_;
  assign pp_29[0] = _385_;
  assign pp_29[1] = _386_;
  assign pp_30 = _390_;
  assign _000_ = _178_;
  assign _001_ = _179_;
  assign _002_ = _180_;
  assign _003_ = _181_;
  assign _004_ = _182_;
  assign _005_ = _183_;
  assign _006_ = _184_;
  assign _007_ = _185_;
  assign _008_ = _186_;
  assign _009_ = _187_;
  assign _010_ = _188_;
  assign _011_ = _189_;
  assign _012_ = _190_;
  assign _013_ = _191_;
  assign _014_ = _192_;
  assign _015_ = _193_;
  assign _016_ = _194_;
  assign _017_ = _195_;
  assign _018_ = _196_;
  assign _019_ = _197_;
  assign _020_ = _198_;
  assign _021_ = _199_;
  assign _022_ = _200_;
  assign _023_ = _201_;
  assign _024_ = _202_;
  assign _025_ = _203_;
  assign _026_ = _204_;
  assign _027_ = _205_;
  assign _028_ = _206_;
  assign _029_ = _207_;
  assign _030_ = _208_;
  assign _031_ = _209_;
  assign _032_ = _210_;
  assign _033_ = _211_;
  assign _034_ = _212_;
  assign _035_ = _213_;
  assign _036_ = _214_;
  assign _037_ = _215_;
  assign _038_ = _216_;
  assign _039_ = _217_;
  assign _040_ = _218_;
  assign _041_ = _219_;
  assign _042_ = _220_;
  assign _043_ = _221_;
  assign _044_ = _222_;
  assign _045_ = _223_;
  assign _046_ = _224_;
  assign _047_ = _225_;
  assign _048_ = _226_;
  assign _049_ = _227_;
  assign _050_ = _228_;
  assign _051_ = _229_;
  assign _052_ = _230_;
  assign _053_ = _231_;
  assign _054_ = _232_;
  assign _055_ = _233_;
  assign _056_ = _234_;
  assign _057_ = _235_;
  assign _058_ = _236_;
  assign _059_ = _237_;
  assign _060_ = _238_;
  assign _061_ = _239_;
  assign _062_ = _240_;
  assign _063_ = _241_;
  assign _064_ = _242_;
  assign _065_ = _243_;
  assign _066_ = _244_;
  assign _067_ = _245_;
  assign _068_ = _246_;
  assign _069_ = _247_;
  assign _070_ = _248_;
  assign _071_ = _249_;
  assign _072_ = _250_;
  assign _073_ = _251_;
  assign _074_ = _252_;
  assign _075_ = _253_;
  assign _076_ = _254_;
  assign _077_ = _255_;
  assign _078_ = _256_;
  assign _079_ = _257_;
  assign _080_ = _258_;
  assign _081_ = _259_;
  assign _082_ = _260_;
  assign _083_ = _261_;
  assign _084_ = _262_;
  assign _085_ = _263_;
  assign _086_ = _264_;
  assign _087_ = _265_;
  assign _088_ = _266_;
  assign _089_ = _267_;
  assign _090_ = _268_;
  assign _091_ = _269_;
  assign _092_ = _270_;
  assign _093_ = _271_;
  assign _094_ = _272_;
  assign _095_ = _273_;
  assign _096_ = _274_;
  assign _097_ = _275_;
  assign _098_ = _276_;
  assign _099_ = _277_;
  assign _100_ = _278_;
  assign _101_ = _279_;
  assign _102_ = _280_;
  assign _103_ = _281_;
  assign _104_ = _282_;
  assign _105_ = _283_;
  assign _106_ = _284_;
  assign _107_ = _285_;
  assign _108_ = _286_;
  assign _109_ = _287_;
  assign _110_ = _288_;
  assign _111_ = _289_;
  assign _112_ = _290_;
  assign _113_ = _291_;
  assign _114_ = _292_;
  assign _115_ = _293_;
  assign _116_ = _294_;
  assign _117_ = _295_;
  assign _118_ = _296_;
  assign _119_ = _297_;
  assign _120_ = _298_;
  assign _121_ = _299_;
  assign _122_ = _300_;
  assign _123_ = _301_;
  assign _124_ = _302_;
  assign _125_ = _303_;
  assign _126_ = _304_;
  assign _127_ = _305_;
  assign _128_ = _306_;
  assign _129_ = _307_;
  assign _130_ = _308_;
  assign _131_ = _309_;
  assign _132_ = _310_;
  assign _133_ = _311_;
  assign _134_ = _312_;
  assign _135_ = _313_;
  assign _136_ = _314_;
  assign _137_ = _315_;
  assign _138_ = _316_;
  assign _139_ = _317_;
  assign _140_ = _318_;
  assign _141_ = _319_;
  assign _142_ = _320_;
  assign _143_ = _321_;
  assign _144_ = _322_;
  assign _145_ = _323_;
endmodule

module STAGE2(s_0, s_1, s_2, s_3, s_4, s_5, s_6, s_7, s_8, s_9, s_10, s_11, s_12, s_13, s_14, s_15, s_16, s_17, s_18, s_19, s_20, s_21, s_22, s_23, s_24, s_25, s_26, s_27, s_28, s_29, s_30, pp_0, pp_1, pp_2, pp_3, pp_4, pp_5, pp_6, pp_7, pp_8, pp_9, pp_10, pp_11, pp_12, pp_13, pp_14, pp_15, pp_16, pp_17, pp_18, pp_19, pp_20, pp_21, pp_22, pp_23, pp_24, pp_25, pp_26, pp_27, pp_28, pp_29, pp_30);
  output pp_0;
  output [1:0] pp_1;
  output [3:0] pp_10;
  wire pp_10_c1;
  wire pp_10_c2;
  wire pp_10_s1;
  wire pp_10_s2;
  output [3:0] pp_11;
  wire pp_11_c1;
  wire pp_11_c2;
  wire pp_11_s1;
  wire pp_11_s2;
  output [3:0] pp_12;
  wire pp_12_c1;
  wire pp_12_c2;
  wire pp_12_s1;
  wire pp_12_s2;
  output [3:0] pp_13;
  wire pp_13_c1;
  wire pp_13_c2;
  wire pp_13_s1;
  wire pp_13_s2;
  output [3:0] pp_14;
  wire pp_14_c1;
  wire pp_14_c2;
  wire pp_14_s1;
  wire pp_14_s2;
  output [3:0] pp_15;
  wire pp_15_c1;
  wire pp_15_c2;
  wire pp_15_s1;
  wire pp_15_s2;
  output [3:0] pp_16;
  wire pp_16_c1;
  wire pp_16_c2;
  wire pp_16_c3;
  wire pp_16_c4;
  wire pp_16_s1;
  wire pp_16_s2;
  output [3:0] pp_17;
  wire pp_17_c1;
  wire pp_17_c2;
  wire pp_17_c3;
  wire pp_17_c4;
  wire pp_17_s1;
  wire pp_17_s2;
  output [3:0] pp_18;
  wire pp_18_c1;
  wire pp_18_c2;
  wire pp_18_c3;
  wire pp_18_c4;
  wire pp_18_s1;
  wire pp_18_s2;
  output [3:0] pp_19;
  wire pp_19_c1;
  wire pp_19_c2;
  wire pp_19_c3;
  wire pp_19_c4;
  wire pp_19_s1;
  wire pp_19_s2;
  output [2:0] pp_2;
  output [3:0] pp_20;
  wire pp_20_c1;
  wire pp_20_c2;
  wire pp_20_c3;
  wire pp_20_c4;
  wire pp_20_s1;
  wire pp_20_s2;
  output [3:0] pp_21;
  wire pp_21_c1;
  wire pp_21_c2;
  wire pp_21_c3;
  wire pp_21_c4;
  wire pp_21_s1;
  wire pp_21_s2;
  output [3:0] pp_22;
  wire pp_22_c1;
  wire pp_22_c2;
  wire pp_22_c3;
  wire pp_22_c4;
  wire pp_22_s1;
  wire pp_22_s2;
  output [3:0] pp_23;
  wire pp_23_c1;
  wire pp_23_c2;
  wire pp_23_c3;
  wire pp_23_c4;
  wire pp_23_s1;
  wire pp_23_s2;
  output [3:0] pp_24;
  wire pp_24_c1;
  wire pp_24_c2;
  wire pp_24_c3;
  wire pp_24_c4;
  wire pp_24_s1;
  wire pp_24_s2;
  output [3:0] pp_25;
  wire pp_25_c1;
  wire pp_25_c2;
  wire pp_25_c3;
  wire pp_25_s1;
  wire pp_25_s2;
  output [3:0] pp_26;
  wire pp_26_c1;
  wire pp_26_c2;
  wire pp_26_s;
  output [3:0] pp_27;
  wire pp_27_c;
  wire pp_27_s;
  output [3:0] pp_28;
  output [1:0] pp_29;
  output [3:0] pp_3;
  output pp_30;
  output [3:0] pp_4;
  wire pp_4_c;
  wire pp_4_s;
  output [3:0] pp_5;
  wire pp_5_c;
  wire pp_5_s;
  output [3:0] pp_6;
  wire pp_6_c1;
  wire pp_6_c2;
  wire pp_6_s1;
  wire pp_6_s2;
  output [3:0] pp_7;
  wire pp_7_c1;
  wire pp_7_c2;
  wire pp_7_s1;
  wire pp_7_s2;
  output [3:0] pp_8;
  wire pp_8_c1;
  wire pp_8_c2;
  wire pp_8_s1;
  wire pp_8_s2;
  output [3:0] pp_9;
  wire pp_9_c1;
  wire pp_9_c2;
  wire pp_9_s1;
  wire pp_9_s2;
  input s_0;
  input [1:0] s_1;
  input [7:0] s_10;
  input [7:0] s_11;
  input [7:0] s_12;
  input [7:0] s_13;
  input [7:0] s_14;
  input [7:0] s_15;
  input [7:0] s_16;
  input [7:0] s_17;
  input [7:0] s_18;
  input [7:0] s_19;
  input [2:0] s_2;
  input [7:0] s_20;
  input [7:0] s_21;
  input [7:0] s_22;
  input [7:0] s_23;
  input [7:0] s_24;
  input [5:0] s_25;
  input [4:0] s_26;
  input [3:0] s_27;
  input [2:0] s_28;
  input [1:0] s_29;
  input [3:0] s_3;
  input s_30;
  input [4:0] s_4;
  input [5:0] s_5;
  input [6:0] s_6;
  input [7:0] s_7;
  input [7:0] s_8;
  input [7:0] s_9;
  ACCI1 ACCI1_pp_10_1 (
    .C(pp_10_c1),
    .S(pp_10_s1),
    .a(s_10[0]),
    .b(s_10[1]),
    .c(s_10[2]),
    .d(s_10[3])
  );
  ACCI1 ACCI1_pp_10_2 (
    .C(pp_10_c2),
    .S(pp_10_s2),
    .a(s_10[4]),
    .b(s_10[5]),
    .c(s_10[6]),
    .d(s_10[7])
  );
  ACCI1 ACCI1_pp_11_1 (
    .C(pp_11_c1),
    .S(pp_11_s1),
    .a(s_11[0]),
    .b(s_11[1]),
    .c(s_11[2]),
    .d(s_11[3])
  );
  ACCI1 ACCI1_pp_11_2 (
    .C(pp_11_c2),
    .S(pp_11_s2),
    .a(s_11[4]),
    .b(s_11[5]),
    .c(s_11[6]),
    .d(s_11[7])
  );
  ACCI1 ACCI1_pp_12_1 (
    .C(pp_12_c1),
    .S(pp_12_s1),
    .a(s_12[0]),
    .b(s_12[1]),
    .c(s_12[2]),
    .d(s_12[3])
  );
  ACCI1 ACCI1_pp_12_2 (
    .C(pp_12_c2),
    .S(pp_12_s2),
    .a(s_12[4]),
    .b(s_12[5]),
    .c(s_12[6]),
    .d(s_12[7])
  );
  ACCI1 ACCI1_pp_13_1 (
    .C(pp_13_c1),
    .S(pp_13_s1),
    .a(s_13[0]),
    .b(s_13[1]),
    .c(s_13[2]),
    .d(s_13[3])
  );
  ACCI1 ACCI1_pp_13_2 (
    .C(pp_13_c2),
    .S(pp_13_s2),
    .a(s_13[4]),
    .b(s_13[5]),
    .c(s_13[6]),
    .d(s_13[7])
  );
  ACCI1 ACCI1_pp_14_1 (
    .C(pp_14_c1),
    .S(pp_14_s1),
    .a(s_14[0]),
    .b(s_14[1]),
    .c(s_14[2]),
    .d(s_14[3])
  );
  ACCI1 ACCI1_pp_14_2 (
    .C(pp_14_c2),
    .S(pp_14_s2),
    .a(s_14[4]),
    .b(s_14[5]),
    .c(s_14[6]),
    .d(s_14[7])
  );
  ACCI1 ACCI1_pp_15_1 (
    .C(pp_15_c1),
    .S(pp_15_s1),
    .a(s_15[0]),
    .b(s_15[1]),
    .c(s_15[2]),
    .d(s_15[3])
  );
  ACCI1 ACCI1_pp_15_2 (
    .C(pp_15_c2),
    .S(pp_15_s2),
    .a(s_15[4]),
    .b(s_15[5]),
    .c(s_15[6]),
    .d(s_15[7])
  );
  ACCI1 ACCI1_pp_5 (
    .C(pp_5_c),
    .S(pp_5_s),
    .a(s_5[0]),
    .b(s_5[1]),
    .c(s_5[2]),
    .d(s_5[3])
  );
  ACCI1 ACCI1_pp_6 (
    .C(pp_6_c1),
    .S(pp_6_s1),
    .a(s_6[0]),
    .b(s_6[1]),
    .c(s_6[2]),
    .d(s_6[3])
  );
  ACCI1 ACCI1_pp_7_1 (
    .C(pp_7_c1),
    .S(pp_7_s1),
    .a(s_7[0]),
    .b(s_7[1]),
    .c(s_7[2]),
    .d(s_7[3])
  );
  ACCI1 ACCI1_pp_7_2 (
    .C(pp_7_c2),
    .S(pp_7_s2),
    .a(s_7[4]),
    .b(s_7[5]),
    .c(s_7[6]),
    .d(s_7[7])
  );
  ACCI1 ACCI1_pp_8_1 (
    .C(pp_8_c1),
    .S(pp_8_s1),
    .a(s_8[0]),
    .b(s_8[1]),
    .c(s_8[2]),
    .d(s_8[3])
  );
  ACCI1 ACCI1_pp_8_2 (
    .C(pp_8_c2),
    .S(pp_8_s2),
    .a(s_8[4]),
    .b(s_8[5]),
    .c(s_8[6]),
    .d(s_8[7])
  );
  ACCI1 ACCI1_pp_9_1 (
    .C(pp_9_c1),
    .S(pp_9_s1),
    .a(s_9[0]),
    .b(s_9[1]),
    .c(s_9[2]),
    .d(s_9[3])
  );
  ACCI1 ACCI1_pp_9_2 (
    .C(pp_9_c2),
    .S(pp_9_s2),
    .a(s_9[4]),
    .b(s_9[5]),
    .c(s_9[6]),
    .d(s_9[7])
  );
  E_4_2 E_4_2_pp_16_1 (
    .C(pp_16_c1),
    .CIN(1'h0),
    .COUT(pp_16_c2),
    .S(pp_16_s1),
    .a(s_16[0]),
    .b(s_16[1]),
    .c(s_16[2]),
    .d(s_16[3])
  );
  E_4_2 E_4_2_pp_16_2 (
    .C(pp_16_c3),
    .CIN(1'h0),
    .COUT(pp_16_c4),
    .S(pp_16_s2),
    .a(s_16[4]),
    .b(s_16[5]),
    .c(s_16[6]),
    .d(s_16[7])
  );
  E_4_2 E_4_2_pp_17_1 (
    .C(pp_17_c1),
    .CIN(pp_16_c2),
    .COUT(pp_17_c2),
    .S(pp_17_s1),
    .a(s_17[0]),
    .b(s_17[1]),
    .c(s_17[2]),
    .d(s_17[3])
  );
  E_4_2 E_4_2_pp_17_2 (
    .C(pp_17_c3),
    .CIN(pp_16_c4),
    .COUT(pp_17_c4),
    .S(pp_17_s2),
    .a(s_17[4]),
    .b(s_17[5]),
    .c(s_17[6]),
    .d(s_17[7])
  );
  E_4_2 E_4_2_pp_18_1 (
    .C(pp_18_c1),
    .CIN(pp_17_c2),
    .COUT(pp_18_c2),
    .S(pp_18_s1),
    .a(s_18[0]),
    .b(s_18[1]),
    .c(s_18[2]),
    .d(s_18[3])
  );
  E_4_2 E_4_2_pp_18_2 (
    .C(pp_18_c3),
    .CIN(pp_17_c4),
    .COUT(pp_18_c4),
    .S(pp_18_s2),
    .a(s_18[4]),
    .b(s_18[5]),
    .c(s_18[6]),
    .d(s_18[7])
  );
  E_4_2 E_4_2_pp_19_1 (
    .C(pp_19_c1),
    .CIN(pp_18_c2),
    .COUT(pp_19_c2),
    .S(pp_19_s1),
    .a(s_19[0]),
    .b(s_19[1]),
    .c(s_19[2]),
    .d(s_19[3])
  );
  E_4_2 E_4_2_pp_19_2 (
    .C(pp_19_c3),
    .CIN(pp_18_c4),
    .COUT(pp_19_c4),
    .S(pp_19_s2),
    .a(s_19[4]),
    .b(s_19[5]),
    .c(s_19[6]),
    .d(s_19[7])
  );
  E_4_2 E_4_2_pp_20_1 (
    .C(pp_20_c1),
    .CIN(pp_19_c2),
    .COUT(pp_20_c2),
    .S(pp_20_s1),
    .a(s_20[0]),
    .b(s_20[1]),
    .c(s_20[2]),
    .d(s_20[3])
  );
  E_4_2 E_4_2_pp_20_2 (
    .C(pp_20_c3),
    .CIN(pp_19_c4),
    .COUT(pp_20_c4),
    .S(pp_20_s2),
    .a(s_20[4]),
    .b(s_20[5]),
    .c(s_20[6]),
    .d(s_20[7])
  );
  E_4_2 E_4_2_pp_21_1 (
    .C(pp_21_c1),
    .CIN(pp_20_c2),
    .COUT(pp_21_c2),
    .S(pp_21_s1),
    .a(s_21[0]),
    .b(s_21[1]),
    .c(s_21[2]),
    .d(s_21[3])
  );
  E_4_2 E_4_2_pp_21_2 (
    .C(pp_21_c3),
    .CIN(pp_20_c4),
    .COUT(pp_21_c4),
    .S(pp_21_s2),
    .a(s_21[4]),
    .b(s_21[5]),
    .c(s_21[6]),
    .d(s_21[7])
  );
  E_4_2 E_4_2_pp_22_1 (
    .C(pp_22_c1),
    .CIN(pp_21_c2),
    .COUT(pp_22_c2),
    .S(pp_22_s1),
    .a(s_22[0]),
    .b(s_22[1]),
    .c(s_22[2]),
    .d(s_22[3])
  );
  E_4_2 E_4_2_pp_22_2 (
    .C(pp_22_c3),
    .CIN(pp_21_c4),
    .COUT(pp_22_c4),
    .S(pp_22_s2),
    .a(s_22[4]),
    .b(s_22[5]),
    .c(s_22[6]),
    .d(s_22[7])
  );
  E_4_2 E_4_2_pp_23_1 (
    .C(pp_23_c1),
    .CIN(pp_22_c2),
    .COUT(pp_23_c2),
    .S(pp_23_s1),
    .a(s_23[0]),
    .b(s_23[1]),
    .c(s_23[2]),
    .d(s_23[3])
  );
  E_4_2 E_4_2_pp_23_2 (
    .C(pp_23_c3),
    .CIN(pp_22_c4),
    .COUT(pp_23_c4),
    .S(pp_23_s2),
    .a(s_23[4]),
    .b(s_23[5]),
    .c(s_23[6]),
    .d(s_23[7])
  );
  E_4_2 E_4_2_pp_24_1 (
    .C(pp_24_c1),
    .CIN(pp_23_c2),
    .COUT(pp_24_c2),
    .S(pp_24_s1),
    .a(s_24[0]),
    .b(s_24[1]),
    .c(s_24[2]),
    .d(s_24[3])
  );
  E_4_2 E_4_2_pp_24_2 (
    .C(pp_24_c3),
    .CIN(pp_23_c4),
    .COUT(pp_24_c4),
    .S(pp_24_s2),
    .a(s_24[4]),
    .b(s_24[5]),
    .c(s_24[6]),
    .d(s_24[7])
  );
  E_4_2 E_4_2_pp_25_1 (
    .C(pp_25_c1),
    .CIN(pp_24_c2),
    .COUT(pp_25_c2),
    .S(pp_25_s1),
    .a(s_25[0]),
    .b(s_25[1]),
    .c(s_25[2]),
    .d(s_25[3])
  );
  E_4_2 E_4_2_pp_26_1 (
    .C(pp_26_c1),
    .CIN(pp_25_c2),
    .COUT(pp_26_c2),
    .S(pp_26_s),
    .a(s_26[0]),
    .b(s_26[1]),
    .c(s_26[2]),
    .d(s_26[3])
  );
  Full_adder Full_adder_pp_25 (
    .C(pp_25_c3),
    .CIN(pp_24_c4),
    .S(pp_25_s2),
    .a(s_25[4]),
    .b(s_25[5])
  );
  Full_adder Full_adder_pp_27 (
    .C(pp_27_c),
    .CIN(s_27[2]),
    .S(pp_27_s),
    .a(s_27[0]),
    .b(s_27[1])
  );
  Half_adder Half_adder_pp_4 (
    .C(pp_4_c),
    .S(pp_4_s),
    .a(s_4[0]),
    .b(s_4[1])
  );
  Half_adder Half_adder_pp_6 (
    .C(pp_6_c2),
    .S(pp_6_s2),
    .a(s_6[4]),
    .b(s_6[5])
  );
  assign pp_0 = s_0;
  assign pp_1 = s_1;
  assign pp_10 = { pp_9_c2, pp_9_c1, pp_10_s1, pp_10_s2 };
  assign pp_11 = { pp_10_c2, pp_10_c1, pp_11_s1, pp_11_s2 };
  assign pp_12 = { pp_11_c2, pp_11_c1, pp_12_s1, pp_12_s2 };
  assign pp_13 = { pp_12_c2, pp_12_c1, pp_13_s1, pp_13_s2 };
  assign pp_14 = { pp_13_c2, pp_13_c1, pp_14_s1, pp_14_s2 };
  assign pp_15 = { pp_14_c2, pp_14_c1, pp_15_s1, pp_15_s2 };
  assign pp_16 = { pp_16_s2, pp_15_c2, pp_16_s1, pp_15_c1 };
  assign pp_17 = { pp_17_s2, pp_16_c3, pp_17_s1, pp_16_c1 };
  assign pp_18 = { pp_18_s2, pp_17_c3, pp_18_s1, pp_17_c1 };
  assign pp_19 = { pp_19_s2, pp_18_c3, pp_19_s1, pp_18_c1 };
  assign pp_2 = s_2;
  assign pp_20 = { pp_20_s2, pp_19_c3, pp_20_s1, pp_19_c1 };
  assign pp_21 = { pp_21_s2, pp_20_c3, pp_21_s1, pp_20_c1 };
  assign pp_22 = { pp_22_s2, pp_21_c3, pp_22_s1, pp_21_c1 };
  assign pp_23 = { pp_23_s2, pp_22_c3, pp_23_s1, pp_22_c1 };
  assign pp_24 = { pp_24_s2, pp_23_c3, pp_24_s1, pp_23_c1 };
  assign pp_25 = { pp_25_s2, pp_24_c3, pp_25_s1, pp_24_c1 };
  assign pp_26 = { pp_26_s, pp_25_c3, s_26[4], pp_25_c1 };
  assign pp_27 = { pp_27_s, pp_26_c2, s_27[3], pp_26_c1 };
  assign pp_28 = { s_28, pp_27_c };
  assign pp_29 = s_29;
  assign pp_3 = s_3;
  assign pp_30 = s_30;
  assign pp_4 = { s_4[4:2], pp_4_s };
  assign pp_5 = { pp_4_c, s_5[5:4], pp_5_s };
  assign pp_6 = { pp_5_c, s_6[6], pp_6_s1, pp_6_s2 };
  assign pp_7 = { pp_6_c2, pp_6_c1, pp_7_s1, pp_7_s2 };
  assign pp_8 = { pp_7_c2, pp_7_c1, pp_8_s1, pp_8_s2 };
  assign pp_9 = { pp_8_c2, pp_8_c1, pp_9_s1, pp_9_s2 };
endmodule

module STAGE3(pp_0, pp_1, pp_2, pp_3, pp_4, pp_5, pp_6, pp_7, pp_8, pp_9, pp_10, pp_11, pp_12, pp_13, pp_14, pp_15, pp_16, pp_17, pp_18, pp_19, pp_20, pp_21, pp_22, pp_23, pp_24, pp_25, pp_26, pp_27, pp_28, pp_29, pp_30, approx);
  wire [30:0] A;
  wire [30:0] B;
  output [31:0] approx;
  input pp_0;
  input [1:0] pp_1;
  input [3:0] pp_10;
  wire pp_10_c;
  wire pp_10_s;
  input [3:0] pp_11;
  wire pp_11_c;
  wire pp_11_s;
  input [3:0] pp_12;
  wire pp_12_c;
  wire pp_12_s;
  input [3:0] pp_13;
  wire pp_13_c;
  wire pp_13_s;
  input [3:0] pp_14;
  wire pp_14_c;
  wire pp_14_s;
  input [3:0] pp_15;
  wire pp_15_c;
  wire pp_15_s;
  input [3:0] pp_16;
  wire pp_16_c1;
  wire pp_16_c2;
  wire pp_16_s;
  input [3:0] pp_17;
  wire pp_17_c1;
  wire pp_17_c2;
  wire pp_17_s;
  input [3:0] pp_18;
  wire pp_18_c1;
  wire pp_18_c2;
  wire pp_18_s;
  input [3:0] pp_19;
  wire pp_19_c1;
  wire pp_19_c2;
  wire pp_19_s;
  input [2:0] pp_2;
  input [3:0] pp_20;
  wire pp_20_c1;
  wire pp_20_c2;
  wire pp_20_s;
  input [3:0] pp_21;
  wire pp_21_c1;
  wire pp_21_c2;
  wire pp_21_s;
  input [3:0] pp_22;
  wire pp_22_c1;
  wire pp_22_c2;
  wire pp_22_s;
  input [3:0] pp_23;
  wire pp_23_c1;
  wire pp_23_c2;
  wire pp_23_s;
  input [3:0] pp_24;
  wire pp_24_c1;
  wire pp_24_c2;
  wire pp_24_s;
  input [3:0] pp_25;
  wire pp_25_c1;
  wire pp_25_c2;
  wire pp_25_s;
  input [3:0] pp_26;
  wire pp_26_c1;
  wire pp_26_c2;
  wire pp_26_s;
  input [3:0] pp_27;
  wire pp_27_c1;
  wire pp_27_c2;
  wire pp_27_s;
  input [3:0] pp_28;
  wire pp_28_c1;
  wire pp_28_c2;
  wire pp_28_s;
  input [1:0] pp_29;
  wire pp_29_c;
  wire pp_29_s;
  wire pp_2_c;
  wire pp_2_s;
  input [3:0] pp_3;
  input pp_30;
  wire pp_3_c;
  wire pp_3_s;
  input [3:0] pp_4;
  wire pp_4_c;
  wire pp_4_s;
  input [3:0] pp_5;
  wire pp_5_c;
  wire pp_5_s;
  input [3:0] pp_6;
  wire pp_6_c;
  wire pp_6_s;
  input [3:0] pp_7;
  wire pp_7_c;
  wire pp_7_s;
  input [3:0] pp_8;
  wire pp_8_c;
  wire pp_8_s;
  input [3:0] pp_9;
  wire pp_9_c;
  wire pp_9_s;
  ACCI1 ACCI1_pp_10_1 (
    .C(pp_10_c),
    .S(pp_10_s),
    .a(pp_10[0]),
    .b(pp_10[1]),
    .c(pp_10[2]),
    .d(pp_10[3])
  );
  ACCI1 ACCI1_pp_11_1 (
    .C(pp_11_c),
    .S(pp_11_s),
    .a(pp_11[0]),
    .b(pp_11[1]),
    .c(pp_11[2]),
    .d(pp_11[3])
  );
  ACCI1 ACCI1_pp_12_1 (
    .C(pp_12_c),
    .S(pp_12_s),
    .a(pp_12[0]),
    .b(pp_12[1]),
    .c(pp_12[2]),
    .d(pp_12[3])
  );
  ACCI1 ACCI1_pp_13_1 (
    .C(pp_13_c),
    .S(pp_13_s),
    .a(pp_13[0]),
    .b(pp_13[1]),
    .c(pp_13[2]),
    .d(pp_13[3])
  );
  ACCI1 ACCI1_pp_14_1 (
    .C(pp_14_c),
    .S(pp_14_s),
    .a(pp_14[0]),
    .b(pp_14[1]),
    .c(pp_14[2]),
    .d(pp_14[3])
  );
  ACCI1 ACCI1_pp_15_1 (
    .C(pp_15_c),
    .S(pp_15_s),
    .a(pp_15[0]),
    .b(pp_15[1]),
    .c(pp_15[2]),
    .d(pp_15[3])
  );
  ACCI1 ACCI1_pp_3 (
    .C(pp_3_c),
    .S(pp_3_s),
    .a(pp_3[0]),
    .b(pp_3[1]),
    .c(pp_3[2]),
    .d(pp_3[3])
  );
  ACCI1 ACCI1_pp_4 (
    .C(pp_4_c),
    .S(pp_4_s),
    .a(pp_4[0]),
    .b(pp_4[1]),
    .c(pp_4[2]),
    .d(pp_4[3])
  );
  ACCI1 ACCI1_pp_5 (
    .C(pp_5_c),
    .S(pp_5_s),
    .a(pp_5[0]),
    .b(pp_5[1]),
    .c(pp_5[2]),
    .d(pp_5[3])
  );
  ACCI1 ACCI1_pp_6 (
    .C(pp_6_c),
    .S(pp_6_s),
    .a(pp_6[0]),
    .b(pp_6[1]),
    .c(pp_6[2]),
    .d(pp_6[3])
  );
  ACCI1 ACCI1_pp_7 (
    .C(pp_7_c),
    .S(pp_7_s),
    .a(pp_7[0]),
    .b(pp_7[1]),
    .c(pp_7[2]),
    .d(pp_7[3])
  );
  ACCI1 ACCI1_pp_8 (
    .C(pp_8_c),
    .S(pp_8_s),
    .a(pp_8[0]),
    .b(pp_8[1]),
    .c(pp_8[2]),
    .d(pp_8[3])
  );
  ACCI1 ACCI1_pp_9 (
    .C(pp_9_c),
    .S(pp_9_s),
    .a(pp_9[0]),
    .b(pp_9[1]),
    .c(pp_9[2]),
    .d(pp_9[3])
  );
  E_4_2 E_4_2_pp_16_1 (
    .C(pp_16_c1),
    .CIN(1'h0),
    .COUT(pp_16_c2),
    .S(pp_16_s),
    .a(pp_16[0]),
    .b(pp_16[1]),
    .c(pp_16[2]),
    .d(pp_16[3])
  );
  E_4_2 E_4_2_pp_17_1 (
    .C(pp_17_c1),
    .CIN(pp_16_c2),
    .COUT(pp_17_c2),
    .S(pp_17_s),
    .a(pp_17[0]),
    .b(pp_17[1]),
    .c(pp_17[2]),
    .d(pp_17[3])
  );
  E_4_2 E_4_2_pp_18_1 (
    .C(pp_18_c1),
    .CIN(pp_17_c2),
    .COUT(pp_18_c2),
    .S(pp_18_s),
    .a(pp_18[0]),
    .b(pp_18[1]),
    .c(pp_18[2]),
    .d(pp_18[3])
  );
  E_4_2 E_4_2_pp_19_1 (
    .C(pp_19_c1),
    .CIN(pp_18_c2),
    .COUT(pp_19_c2),
    .S(pp_19_s),
    .a(pp_19[0]),
    .b(pp_19[1]),
    .c(pp_19[2]),
    .d(pp_19[3])
  );
  E_4_2 E_4_2_pp_20_1 (
    .C(pp_20_c1),
    .CIN(pp_19_c2),
    .COUT(pp_20_c2),
    .S(pp_20_s),
    .a(pp_20[0]),
    .b(pp_20[1]),
    .c(pp_20[2]),
    .d(pp_20[3])
  );
  E_4_2 E_4_2_pp_21_1 (
    .C(pp_21_c1),
    .CIN(pp_20_c2),
    .COUT(pp_21_c2),
    .S(pp_21_s),
    .a(pp_21[0]),
    .b(pp_21[1]),
    .c(pp_21[2]),
    .d(pp_21[3])
  );
  E_4_2 E_4_2_pp_22_1 (
    .C(pp_22_c1),
    .CIN(pp_21_c2),
    .COUT(pp_22_c2),
    .S(pp_22_s),
    .a(pp_22[0]),
    .b(pp_22[1]),
    .c(pp_22[2]),
    .d(pp_22[3])
  );
  E_4_2 E_4_2_pp_23_1 (
    .C(pp_23_c1),
    .CIN(pp_22_c2),
    .COUT(pp_23_c2),
    .S(pp_23_s),
    .a(pp_23[0]),
    .b(pp_23[1]),
    .c(pp_23[2]),
    .d(pp_23[3])
  );
  E_4_2 E_4_2_pp_24_1 (
    .C(pp_24_c1),
    .CIN(pp_23_c2),
    .COUT(pp_24_c2),
    .S(pp_24_s),
    .a(pp_24[0]),
    .b(pp_24[1]),
    .c(pp_24[2]),
    .d(pp_24[3])
  );
  E_4_2 E_4_2_pp_25_1 (
    .C(pp_25_c1),
    .CIN(pp_24_c2),
    .COUT(pp_25_c2),
    .S(pp_25_s),
    .a(pp_25[0]),
    .b(pp_25[1]),
    .c(pp_25[2]),
    .d(pp_25[3])
  );
  E_4_2 E_4_2_pp_26_1 (
    .C(pp_26_c1),
    .CIN(pp_25_c2),
    .COUT(pp_26_c2),
    .S(pp_26_s),
    .a(pp_26[0]),
    .b(pp_26[1]),
    .c(pp_26[2]),
    .d(pp_26[3])
  );
  E_4_2 E_4_2_pp_27_1 (
    .C(pp_27_c1),
    .CIN(pp_26_c2),
    .COUT(pp_27_c2),
    .S(pp_27_s),
    .a(pp_27[0]),
    .b(pp_27[1]),
    .c(pp_27[2]),
    .d(pp_27[3])
  );
  E_4_2 E_4_2_pp_28_1 (
    .C(pp_28_c1),
    .CIN(pp_27_c2),
    .COUT(pp_28_c2),
    .S(pp_28_s),
    .a(pp_28[0]),
    .b(pp_28[1]),
    .c(pp_28[2]),
    .d(pp_28[3])
  );
  CLA32bit Final_add (
    .A({ 1'h0, pp_30, pp_29_s, pp_28_s, pp_27_s, pp_26_s, pp_25_s, pp_24_s, pp_23_s, pp_22_s, pp_21_s, pp_20_s, pp_19_s, pp_18_s, pp_17_s, pp_16_s, pp_15_s, pp_14_s, pp_13_s, pp_12_s, pp_11_s, pp_10_s, pp_9_s, pp_8_s, pp_7_s, pp_6_s, pp_5_s, pp_4_s, pp_3_s, pp_2_s, pp_1[1], pp_0 }),
    .B({ 1'h0, pp_29_c, pp_28_c1, pp_27_c1, pp_26_c1, pp_25_c1, pp_24_c1, pp_23_c1, pp_22_c1, pp_21_c1, pp_20_c1, pp_19_c1, pp_18_c1, pp_17_c1, pp_16_c1, pp_15_c, pp_14_c, pp_13_c, pp_12_c, pp_11_c, pp_10_c, pp_9_c, pp_8_c, pp_7_c, pp_6_c, pp_5_c, pp_4_c, pp_3_c, pp_2_c, pp_2[2], pp_1[0], 1'h0 }),
    .Cin(1'h0),
    .Cout(),
    .Sum(approx)
  );
  Full_adder Full_adder_pp_29 (
    .C(pp_29_c),
    .CIN(pp_28_c2),
    .S(pp_29_s),
    .a(pp_29[0]),
    .b(pp_29[1])
  );
  Half_adder Half_adder_pp_2 (
    .C(pp_2_c),
    .S(pp_2_s),
    .a(pp_2[0]),
    .b(pp_2[1])
  );
  assign A = { pp_30, pp_29_s, pp_28_s, pp_27_s, pp_26_s, pp_25_s, pp_24_s, pp_23_s, pp_22_s, pp_21_s, pp_20_s, pp_19_s, pp_18_s, pp_17_s, pp_16_s, pp_15_s, pp_14_s, pp_13_s, pp_12_s, pp_11_s, pp_10_s, pp_9_s, pp_8_s, pp_7_s, pp_6_s, pp_5_s, pp_4_s, pp_3_s, pp_2_s, pp_1[1], pp_0 };
  assign B = { pp_29_c, pp_28_c1, pp_27_c1, pp_26_c1, pp_25_c1, pp_24_c1, pp_23_c1, pp_22_c1, pp_21_c1, pp_20_c1, pp_19_c1, pp_18_c1, pp_17_c1, pp_16_c1, pp_15_c, pp_14_c, pp_13_c, pp_12_c, pp_11_c, pp_10_c, pp_9_c, pp_8_c, pp_7_c, pp_6_c, pp_5_c, pp_4_c, pp_3_c, pp_2_c, pp_2[2], pp_1[0], 1'h0 };
endmodule

module sram_multiplier_system(clk, rst_n, pe_ce, init_enable, data_in, data_out, init_done, valid_out);
  wire [4:0] _000_;
  wire [15:0] _001_;
  wire [31:0] _002_;
  wire [4:0] _003_;
  wire [15:0] _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  wire _108_;
  wire _109_;
  wire _110_;
  wire _111_;
  wire _112_;
  wire _113_;
  wire _114_;
  wire _115_;
  wire _116_;
  wire _117_;
  wire _118_;
  wire _119_;
  wire _120_;
  wire _121_;
  wire _122_;
  wire _123_;
  wire _124_;
  wire _125_;
  wire _126_;
  wire _127_;
  wire _128_;
  wire _129_;
  wire _130_;
  wire _131_;
  wire _132_;
  wire _133_;
  wire _134_;
  wire _135_;
  wire _136_;
  wire _137_;
  wire _138_;
  wire _139_;
  wire _140_;
  wire _141_;
  wire _142_;
  wire _143_;
  wire _144_;
  wire _145_;
  wire _146_;
  wire _147_;
  wire _148_;
  wire _149_;
  wire _150_;
  wire _151_;
  wire _152_;
  wire _153_;
  wire _154_;
  wire _155_;
  wire _156_;
  wire _157_;
  wire _158_;
  wire _159_;
  wire _160_;
  wire _161_;
  wire _162_;
  wire _163_;
  wire _164_;
  wire _165_;
  wire _166_;
  wire _167_;
  wire _168_;
  wire _169_;
  wire _170_;
  wire _171_;
  wire _172_;
  wire _173_;
  wire _174_;
  wire _175_;
  wire _176_;
  wire _177_;
  wire _178_;
  wire _179_;
  wire _180_;
  wire _181_;
  wire _182_;
  wire _183_;
  wire _184_;
  wire _185_;
  wire _186_;
  wire _187_;
  wire _188_;
  wire _189_;
  wire _190_;
  wire _191_;
  wire _192_;
  wire _193_;
  wire _194_;
  wire _195_;
  wire _196_;
  wire _197_;
  wire _198_;
  wire _199_;
  wire _200_;
  wire _201_;
  wire _202_;
  wire _203_;
  wire _204_;
  wire _205_;
  wire _206_;
  wire _207_;
  wire _208_;
  wire _209_;
  wire _210_;
  wire _211_;
  wire _212_;
  wire _213_;
  wire _214_;
  wire _215_;
  wire _216_;
  wire _217_;
  wire _218_;
  wire _219_;
  wire _220_;
  wire _221_;
  wire _222_;
  wire _223_;
  wire _224_;
  wire _225_;
  wire _226_;
  wire _227_;
  wire _228_;
  wire _229_;
  wire _230_;
  wire _231_;
  wire _232_;
  wire _233_;
  wire _234_;
  wire _235_;
  wire _236_;
  wire _237_;
  wire _238_;
  wire _239_;
  wire _240_;
  wire _241_;
  wire _242_;
  wire _243_;
  wire _244_;
  wire _245_;
  wire _246_;
  wire _247_;
  wire _248_;
  wire _249_;
  wire _250_;
  wire _251_;
  wire _252_;
  wire _253_;
  wire _254_;
  wire _255_;
  wire _256_;
  wire _257_;
  wire _258_;
  wire _259_;
  wire _260_;
  wire _261_;
  wire _262_;
  wire _263_;
  wire _264_;
  wire _265_;
  wire _266_;
  wire _267_;
  wire _268_;
  wire _269_;
  wire _270_;
  wire _271_;
  wire _272_;
  wire _273_;
  wire _274_;
  wire _275_;
  wire _276_;
  wire _277_;
  wire _278_;
  wire _279_;
  wire _280_;
  wire _281_;
  wire _282_;
  wire _283_;
  wire _284_;
  wire _285_;
  wire _286_;
  wire _287_;
  wire _288_;
  wire _289_;
  wire _290_;
  wire _291_;
  wire _292_;
  wire _293_;
  wire _294_;
  wire _295_;
  wire _296_;
  wire _297_;
  wire _298_;
  wire _299_;
  wire _300_;
  wire _301_;
  wire _302_;
  wire _303_;
  wire _304_;
  wire _305_;
  wire _306_;
  wire _307_;
  wire _308_;
  wire _309_;
  wire _310_;
  wire _311_;
  wire _312_;
  wire _313_;
  wire _314_;
  wire _315_;
  wire _316_;
  wire _317_;
  wire _318_;
  wire _319_;
  wire _320_;
  wire _321_;
  wire _322_;
  wire _323_;
  wire _324_;
  wire _325_;
  wire _326_;
  wire _327_;
  wire _328_;
  wire _329_;
  wire _330_;
  wire _331_;
  wire _332_;
  wire _333_;
  wire _334_;
  wire _335_;
  wire _336_;
  wire _337_;
  wire _338_;
  wire _339_;
  wire _340_;
  wire _341_;
  wire _342_;
  wire _343_;
  wire _344_;
  wire _345_;
  wire _346_;
  wire _347_;
  wire _348_;
  wire _349_;
  wire _350_;
  wire _351_;
  wire _352_;
  wire _353_;
  wire _354_;
  wire _355_;
  wire _356_;
  wire _357_;
  wire _358_;
  wire _359_;
  wire _360_;
  wire _361_;
  wire _362_;
  wire _363_;
  wire _364_;
  wire _365_;
  wire _366_;
  wire _367_;
  wire _368_;
  wire _369_;
  wire _370_;
  wire _371_;
  wire _372_;
  wire _373_;
  wire _374_;
  wire _375_;
  wire _376_;
  wire _377_;
  wire _378_;
  wire _379_;
  wire _380_;
  wire _381_;
  wire _382_;
  wire _383_;
  wire _384_;
  wire _385_;
  wire _386_;
  wire _387_;
  wire _388_;
  wire _389_;
  wire _390_;
  wire _391_;
  wire _392_;
  wire _393_;
  wire _394_;
  wire _395_;
  wire _396_;
  wire _397_;
  wire _398_;
  wire _399_;
  wire _400_;
  wire _401_;
  wire _402_;
  wire _403_;
  wire _404_;
  wire _405_;
  wire _406_;
  wire _407_;
  wire _408_;
  wire _409_;
  wire _410_;
  wire _411_;
  wire _412_;
  wire _413_;
  wire _414_;
  wire _415_;
  wire _416_;
  wire _417_;
  wire _418_;
  wire _419_;
  wire [4:0] addr_ptr;
  input clk;
  wire [2:0] curr_state;
  input [15:0] data_in;
  wire [15:0] data_in_reg;
  output [31:0] data_out;
  wire [4:0] init_count;
  output init_done;
  input init_enable;
  input pe_ce;
  wire [31:0] product;
  input rst_n;
  wire [4:0] sram_addr;
  wire [15:0] sram_rdata;
  wire [15:0] sram_rdata_reg;
  output valid_out;
  wire valid_reg_out;
  INV_X1 _420_ (
    .A(_314_),
    .ZN(_238_)
  );
  INV_X1 _421_ (
    .A(_281_),
    .ZN(_195_)
  );
  INV_X1 _422_ (
    .A(_215_),
    .ZN(_239_)
  );
  INV_X1 _423_ (
    .A(_212_),
    .ZN(_240_)
  );
  INV_X1 _424_ (
    .A(_197_),
    .ZN(_241_)
  );
  INV_X1 _425_ (
    .A(_205_),
    .ZN(_242_)
  );
  AND2_X1 _426_ (
    .A1(_314_),
    .A2(_214_),
    .ZN(_191_)
  );
  INV_X1 _427_ (
    .A(_191_),
    .ZN(_243_)
  );
  NAND2_X1 _428_ (
    .A1(_314_),
    .A2(_215_),
    .ZN(_196_)
  );
  NAND2_X1 _429_ (
    .A1(_233_),
    .A2(_232_),
    .ZN(_244_)
  );
  AND3_X1 _430_ (
    .A1(_233_),
    .A2(_232_),
    .A3(_234_),
    .ZN(_245_)
  );
  AND4_X1 _431_ (
    .A1(_233_),
    .A2(_232_),
    .A3(_235_),
    .A4(_234_),
    .ZN(_246_)
  );
  AND3_X1 _432_ (
    .A1(_281_),
    .A2(_236_),
    .A3(_246_),
    .ZN(_247_)
  );
  NOR2_X1 _433_ (
    .A1(_191_),
    .A2(_247_),
    .ZN(_248_)
  );
  AOI21_X1 _434_ (
    .A(_248_),
    .B1(_196_),
    .B2(_243_),
    .ZN(_193_)
  );
  NOR2_X1 _435_ (
    .A1(_238_),
    .A2(_195_),
    .ZN(_249_)
  );
  NAND2_X1 _436_ (
    .A1(_314_),
    .A2(_281_),
    .ZN(_250_)
  );
  NAND3_X1 _437_ (
    .A1(_237_),
    .A2(_213_),
    .A3(_249_),
    .ZN(_251_)
  );
  OAI21_X1 _438_ (
    .A(_251_),
    .B1(_247_),
    .B2(_196_),
    .ZN(_194_)
  );
  AOI22_X1 _439_ (
    .A1(_314_),
    .A2(_202_),
    .B1(_249_),
    .B2(_237_),
    .ZN(_192_)
  );
  AND2_X1 _440_ (
    .A1(_314_),
    .A2(_315_),
    .ZN(_175_)
  );
  AND2_X1 _441_ (
    .A1(_314_),
    .A2(_322_),
    .ZN(_182_)
  );
  AND2_X1 _442_ (
    .A1(_314_),
    .A2(_323_),
    .ZN(_183_)
  );
  AND2_X1 _443_ (
    .A1(_314_),
    .A2(_324_),
    .ZN(_184_)
  );
  AND2_X1 _444_ (
    .A1(_314_),
    .A2(_325_),
    .ZN(_185_)
  );
  AND2_X1 _445_ (
    .A1(_314_),
    .A2(_326_),
    .ZN(_186_)
  );
  AND2_X1 _446_ (
    .A1(_314_),
    .A2(_327_),
    .ZN(_187_)
  );
  AND2_X1 _447_ (
    .A1(_314_),
    .A2(_328_),
    .ZN(_188_)
  );
  AND2_X1 _448_ (
    .A1(_314_),
    .A2(_329_),
    .ZN(_189_)
  );
  AND2_X1 _449_ (
    .A1(_314_),
    .A2(_330_),
    .ZN(_190_)
  );
  AND2_X1 _450_ (
    .A1(_314_),
    .A2(_316_),
    .ZN(_176_)
  );
  AND2_X1 _451_ (
    .A1(_314_),
    .A2(_317_),
    .ZN(_177_)
  );
  AND2_X1 _452_ (
    .A1(_314_),
    .A2(_318_),
    .ZN(_178_)
  );
  AND2_X1 _453_ (
    .A1(_314_),
    .A2(_319_),
    .ZN(_179_)
  );
  AND2_X1 _454_ (
    .A1(_314_),
    .A2(_320_),
    .ZN(_180_)
  );
  AND2_X1 _455_ (
    .A1(_314_),
    .A2(_321_),
    .ZN(_181_)
  );
  AND2_X1 _456_ (
    .A1(_282_),
    .A2(_191_),
    .ZN(_138_)
  );
  AND2_X1 _457_ (
    .A1(_293_),
    .A2(_191_),
    .ZN(_149_)
  );
  AND2_X1 _458_ (
    .A1(_304_),
    .A2(_191_),
    .ZN(_160_)
  );
  AND2_X1 _459_ (
    .A1(_307_),
    .A2(_191_),
    .ZN(_163_)
  );
  AND2_X1 _460_ (
    .A1(_308_),
    .A2(_191_),
    .ZN(_164_)
  );
  AND2_X1 _461_ (
    .A1(_309_),
    .A2(_191_),
    .ZN(_165_)
  );
  AND2_X1 _462_ (
    .A1(_310_),
    .A2(_191_),
    .ZN(_166_)
  );
  AND2_X1 _463_ (
    .A1(_311_),
    .A2(_191_),
    .ZN(_167_)
  );
  AND2_X1 _464_ (
    .A1(_312_),
    .A2(_191_),
    .ZN(_168_)
  );
  AND2_X1 _465_ (
    .A1(_313_),
    .A2(_191_),
    .ZN(_169_)
  );
  AND2_X1 _466_ (
    .A1(_283_),
    .A2(_191_),
    .ZN(_139_)
  );
  AND2_X1 _467_ (
    .A1(_284_),
    .A2(_191_),
    .ZN(_140_)
  );
  AND2_X1 _468_ (
    .A1(_285_),
    .A2(_191_),
    .ZN(_141_)
  );
  AND2_X1 _469_ (
    .A1(_286_),
    .A2(_191_),
    .ZN(_142_)
  );
  AND2_X1 _470_ (
    .A1(_287_),
    .A2(_191_),
    .ZN(_143_)
  );
  AND2_X1 _471_ (
    .A1(_288_),
    .A2(_191_),
    .ZN(_144_)
  );
  AND2_X1 _472_ (
    .A1(_289_),
    .A2(_191_),
    .ZN(_145_)
  );
  AND2_X1 _473_ (
    .A1(_290_),
    .A2(_191_),
    .ZN(_146_)
  );
  AND2_X1 _474_ (
    .A1(_291_),
    .A2(_191_),
    .ZN(_147_)
  );
  AND2_X1 _475_ (
    .A1(_292_),
    .A2(_191_),
    .ZN(_148_)
  );
  AND2_X1 _476_ (
    .A1(_294_),
    .A2(_191_),
    .ZN(_150_)
  );
  AND2_X1 _477_ (
    .A1(_295_),
    .A2(_191_),
    .ZN(_151_)
  );
  AND2_X1 _478_ (
    .A1(_296_),
    .A2(_191_),
    .ZN(_152_)
  );
  AND2_X1 _479_ (
    .A1(_297_),
    .A2(_191_),
    .ZN(_153_)
  );
  AND2_X1 _480_ (
    .A1(_298_),
    .A2(_191_),
    .ZN(_154_)
  );
  AND2_X1 _481_ (
    .A1(_299_),
    .A2(_191_),
    .ZN(_155_)
  );
  AND2_X1 _482_ (
    .A1(_300_),
    .A2(_191_),
    .ZN(_156_)
  );
  AND2_X1 _483_ (
    .A1(_301_),
    .A2(_191_),
    .ZN(_157_)
  );
  AND2_X1 _484_ (
    .A1(_302_),
    .A2(_191_),
    .ZN(_158_)
  );
  AND2_X1 _485_ (
    .A1(_303_),
    .A2(_191_),
    .ZN(_159_)
  );
  AND2_X1 _486_ (
    .A1(_305_),
    .A2(_191_),
    .ZN(_161_)
  );
  AND2_X1 _487_ (
    .A1(_306_),
    .A2(_191_),
    .ZN(_162_)
  );
  AND2_X1 _488_ (
    .A1(_314_),
    .A2(_216_),
    .ZN(_122_)
  );
  AND2_X1 _489_ (
    .A1(_314_),
    .A2(_223_),
    .ZN(_129_)
  );
  AND2_X1 _490_ (
    .A1(_314_),
    .A2(_224_),
    .ZN(_130_)
  );
  AND2_X1 _491_ (
    .A1(_314_),
    .A2(_225_),
    .ZN(_131_)
  );
  AND2_X1 _492_ (
    .A1(_314_),
    .A2(_226_),
    .ZN(_132_)
  );
  AND2_X1 _493_ (
    .A1(_314_),
    .A2(_227_),
    .ZN(_133_)
  );
  AND2_X1 _494_ (
    .A1(_314_),
    .A2(_228_),
    .ZN(_134_)
  );
  AND2_X1 _495_ (
    .A1(_314_),
    .A2(_229_),
    .ZN(_135_)
  );
  AND2_X1 _496_ (
    .A1(_314_),
    .A2(_230_),
    .ZN(_136_)
  );
  AND2_X1 _497_ (
    .A1(_314_),
    .A2(_231_),
    .ZN(_137_)
  );
  AND2_X1 _498_ (
    .A1(_314_),
    .A2(_217_),
    .ZN(_123_)
  );
  AND2_X1 _499_ (
    .A1(_314_),
    .A2(_218_),
    .ZN(_124_)
  );
  AND2_X1 _500_ (
    .A1(_314_),
    .A2(_219_),
    .ZN(_125_)
  );
  AND2_X1 _501_ (
    .A1(_314_),
    .A2(_220_),
    .ZN(_126_)
  );
  AND2_X1 _502_ (
    .A1(_314_),
    .A2(_221_),
    .ZN(_127_)
  );
  AND2_X1 _503_ (
    .A1(_314_),
    .A2(_222_),
    .ZN(_128_)
  );
  NAND2_X1 _504_ (
    .A1(_314_),
    .A2(_195_),
    .ZN(_252_)
  );
  NAND2_X1 _505_ (
    .A1(_240_),
    .A2(_246_),
    .ZN(_253_)
  );
  XNOR2_X1 _506_ (
    .A(_208_),
    .B(_253_),
    .ZN(_254_)
  );
  AOI22_X1 _507_ (
    .A1(_232_),
    .A2(_214_),
    .B1(_254_),
    .B2(_215_),
    .ZN(_255_)
  );
  OAI22_X1 _508_ (
    .A1(_208_),
    .A2(_252_),
    .B1(_255_),
    .B2(_250_),
    .ZN(_170_)
  );
  XNOR2_X1 _509_ (
    .A(_233_),
    .B(_232_),
    .ZN(_256_)
  );
  AOI21_X1 _510_ (
    .A(_239_),
    .B1(_253_),
    .B2(_256_),
    .ZN(_257_)
  );
  AOI21_X1 _511_ (
    .A(_257_),
    .B1(_214_),
    .B2(_233_),
    .ZN(_258_)
  );
  OAI22_X1 _512_ (
    .A1(_209_),
    .A2(_252_),
    .B1(_258_),
    .B2(_250_),
    .ZN(_171_)
  );
  XNOR2_X1 _513_ (
    .A(_210_),
    .B(_244_),
    .ZN(_259_)
  );
  AOI21_X1 _514_ (
    .A(_239_),
    .B1(_253_),
    .B2(_259_),
    .ZN(_260_)
  );
  AOI21_X1 _515_ (
    .A(_260_),
    .B1(_214_),
    .B2(_234_),
    .ZN(_261_)
  );
  OAI22_X1 _516_ (
    .A1(_210_),
    .A2(_252_),
    .B1(_261_),
    .B2(_250_),
    .ZN(_172_)
  );
  OAI21_X1 _517_ (
    .A(_215_),
    .B1(_245_),
    .B2(_235_),
    .ZN(_262_)
  );
  AOI21_X1 _518_ (
    .A(_262_),
    .B1(_246_),
    .B2(_212_),
    .ZN(_263_)
  );
  AOI21_X1 _519_ (
    .A(_263_),
    .B1(_214_),
    .B2(_235_),
    .ZN(_264_)
  );
  OAI22_X1 _520_ (
    .A1(_211_),
    .A2(_252_),
    .B1(_264_),
    .B2(_250_),
    .ZN(_173_)
  );
  AND2_X1 _521_ (
    .A1(_236_),
    .A2(_214_),
    .ZN(_265_)
  );
  OAI221_X1 _522_ (
    .A(_249_),
    .B1(_265_),
    .B2(_215_),
    .C1(_246_),
    .C2(_236_),
    .ZN(_266_)
  );
  OAI21_X1 _523_ (
    .A(_266_),
    .B1(_252_),
    .B2(_212_),
    .ZN(_174_)
  );
  AND2_X1 _524_ (
    .A1(_215_),
    .A2(_203_),
    .ZN(_267_)
  );
  AOI22_X1 _525_ (
    .A1(_214_),
    .A2(_241_),
    .B1(_253_),
    .B2(_267_),
    .ZN(_268_)
  );
  OAI22_X1 _526_ (
    .A1(_203_),
    .A2(_252_),
    .B1(_268_),
    .B2(_250_),
    .ZN(_117_)
  );
  AOI21_X1 _527_ (
    .A(_239_),
    .B1(_246_),
    .B2(_236_),
    .ZN(_269_)
  );
  AND2_X1 _528_ (
    .A1(_197_),
    .A2(_198_),
    .ZN(_270_)
  );
  NOR2_X1 _529_ (
    .A1(_250_),
    .A2(_270_),
    .ZN(_271_)
  );
  OAI221_X1 _530_ (
    .A(_271_),
    .B1(_198_),
    .B2(_197_),
    .C1(_214_),
    .C2(_269_),
    .ZN(_272_)
  );
  OAI21_X1 _531_ (
    .A(_272_),
    .B1(_252_),
    .B2(_204_),
    .ZN(_118_)
  );
  NAND4_X1 _532_ (
    .A1(_200_),
    .A2(_199_),
    .A3(_201_),
    .A4(_270_),
    .ZN(_273_)
  );
  AOI21_X1 _533_ (
    .A(_269_),
    .B1(_273_),
    .B2(_214_),
    .ZN(_274_)
  );
  XNOR2_X1 _534_ (
    .A(_205_),
    .B(_270_),
    .ZN(_275_)
  );
  NAND2_X1 _535_ (
    .A1(_249_),
    .A2(_275_),
    .ZN(_276_)
  );
  OAI22_X1 _536_ (
    .A1(_205_),
    .A2(_252_),
    .B1(_274_),
    .B2(_276_),
    .ZN(_119_)
  );
  NAND3_X1 _537_ (
    .A1(_281_),
    .A2(_242_),
    .A3(_270_),
    .ZN(_277_)
  );
  XNOR2_X1 _538_ (
    .A(_206_),
    .B(_277_),
    .ZN(_278_)
  );
  AOI211_X1 _539_ (
    .A(_238_),
    .B(_278_),
    .C1(_274_),
    .C2(_281_),
    .ZN(_120_)
  );
  NAND4_X1 _540_ (
    .A1(_281_),
    .A2(_200_),
    .A3(_199_),
    .A4(_270_),
    .ZN(_279_)
  );
  XNOR2_X1 _541_ (
    .A(_207_),
    .B(_279_),
    .ZN(_280_)
  );
  AOI211_X1 _542_ (
    .A(_238_),
    .B(_280_),
    .C1(_274_),
    .C2(_281_),
    .ZN(_121_)
  );
  DFF_X1 _543_ (
    .CK(clk),
    .D(_006_),
    .Q(curr_state[0]),
    .QN(_331_)
  );
  DFF_X1 _544_ (
    .CK(clk),
    .D(_007_),
    .Q(curr_state[1]),
    .QN(_332_)
  );
  DFF_X1 _545_ (
    .CK(clk),
    .D(_008_),
    .Q(curr_state[2]),
    .QN(_333_)
  );
  DFF_X1 _546_ (
    .CK(clk),
    .D(_002_[0]),
    .Q(data_out[0]),
    .QN(_334_)
  );
  DFF_X1 _547_ (
    .CK(clk),
    .D(_002_[1]),
    .Q(data_out[1]),
    .QN(_335_)
  );
  DFF_X1 _548_ (
    .CK(clk),
    .D(_002_[2]),
    .Q(data_out[2]),
    .QN(_336_)
  );
  DFF_X1 _549_ (
    .CK(clk),
    .D(_002_[3]),
    .Q(data_out[3]),
    .QN(_337_)
  );
  DFF_X1 _550_ (
    .CK(clk),
    .D(_002_[4]),
    .Q(data_out[4]),
    .QN(_338_)
  );
  DFF_X1 _551_ (
    .CK(clk),
    .D(_002_[5]),
    .Q(data_out[5]),
    .QN(_339_)
  );
  DFF_X1 _552_ (
    .CK(clk),
    .D(_002_[6]),
    .Q(data_out[6]),
    .QN(_340_)
  );
  DFF_X1 _553_ (
    .CK(clk),
    .D(_002_[7]),
    .Q(data_out[7]),
    .QN(_341_)
  );
  DFF_X1 _554_ (
    .CK(clk),
    .D(_002_[8]),
    .Q(data_out[8]),
    .QN(_342_)
  );
  DFF_X1 _555_ (
    .CK(clk),
    .D(_002_[9]),
    .Q(data_out[9]),
    .QN(_343_)
  );
  DFF_X1 _556_ (
    .CK(clk),
    .D(_002_[10]),
    .Q(data_out[10]),
    .QN(_344_)
  );
  DFF_X1 _557_ (
    .CK(clk),
    .D(_002_[11]),
    .Q(data_out[11]),
    .QN(_345_)
  );
  DFF_X1 _558_ (
    .CK(clk),
    .D(_002_[12]),
    .Q(data_out[12]),
    .QN(_346_)
  );
  DFF_X1 _559_ (
    .CK(clk),
    .D(_002_[13]),
    .Q(data_out[13]),
    .QN(_347_)
  );
  DFF_X1 _560_ (
    .CK(clk),
    .D(_002_[14]),
    .Q(data_out[14]),
    .QN(_348_)
  );
  DFF_X1 _561_ (
    .CK(clk),
    .D(_002_[15]),
    .Q(data_out[15]),
    .QN(_349_)
  );
  DFF_X1 _562_ (
    .CK(clk),
    .D(_002_[16]),
    .Q(data_out[16]),
    .QN(_350_)
  );
  DFF_X1 _563_ (
    .CK(clk),
    .D(_002_[17]),
    .Q(data_out[17]),
    .QN(_351_)
  );
  DFF_X1 _564_ (
    .CK(clk),
    .D(_002_[18]),
    .Q(data_out[18]),
    .QN(_352_)
  );
  DFF_X1 _565_ (
    .CK(clk),
    .D(_002_[19]),
    .Q(data_out[19]),
    .QN(_353_)
  );
  DFF_X1 _566_ (
    .CK(clk),
    .D(_002_[20]),
    .Q(data_out[20]),
    .QN(_354_)
  );
  DFF_X1 _567_ (
    .CK(clk),
    .D(_002_[21]),
    .Q(data_out[21]),
    .QN(_355_)
  );
  DFF_X1 _568_ (
    .CK(clk),
    .D(_002_[22]),
    .Q(data_out[22]),
    .QN(_356_)
  );
  DFF_X1 _569_ (
    .CK(clk),
    .D(_002_[23]),
    .Q(data_out[23]),
    .QN(_357_)
  );
  DFF_X1 _570_ (
    .CK(clk),
    .D(_002_[24]),
    .Q(data_out[24]),
    .QN(_358_)
  );
  DFF_X1 _571_ (
    .CK(clk),
    .D(_002_[25]),
    .Q(data_out[25]),
    .QN(_359_)
  );
  DFF_X1 _572_ (
    .CK(clk),
    .D(_002_[26]),
    .Q(data_out[26]),
    .QN(_360_)
  );
  DFF_X1 _573_ (
    .CK(clk),
    .D(_002_[27]),
    .Q(data_out[27]),
    .QN(_361_)
  );
  DFF_X1 _574_ (
    .CK(clk),
    .D(_002_[28]),
    .Q(data_out[28]),
    .QN(_362_)
  );
  DFF_X1 _575_ (
    .CK(clk),
    .D(_002_[29]),
    .Q(data_out[29]),
    .QN(_363_)
  );
  DFF_X1 _576_ (
    .CK(clk),
    .D(_002_[30]),
    .Q(data_out[30]),
    .QN(_364_)
  );
  DFF_X1 _577_ (
    .CK(clk),
    .D(_002_[31]),
    .Q(data_out[31]),
    .QN(_365_)
  );
  DFF_X1 _578_ (
    .CK(clk),
    .D(_001_[0]),
    .Q(data_in_reg[0]),
    .QN(_366_)
  );
  DFF_X1 _579_ (
    .CK(clk),
    .D(_001_[1]),
    .Q(data_in_reg[1]),
    .QN(_367_)
  );
  DFF_X1 _580_ (
    .CK(clk),
    .D(_001_[2]),
    .Q(data_in_reg[2]),
    .QN(_368_)
  );
  DFF_X1 _581_ (
    .CK(clk),
    .D(_001_[3]),
    .Q(data_in_reg[3]),
    .QN(_369_)
  );
  DFF_X1 _582_ (
    .CK(clk),
    .D(_001_[4]),
    .Q(data_in_reg[4]),
    .QN(_370_)
  );
  DFF_X1 _583_ (
    .CK(clk),
    .D(_001_[5]),
    .Q(data_in_reg[5]),
    .QN(_371_)
  );
  DFF_X1 _584_ (
    .CK(clk),
    .D(_001_[6]),
    .Q(data_in_reg[6]),
    .QN(_372_)
  );
  DFF_X1 _585_ (
    .CK(clk),
    .D(_001_[7]),
    .Q(data_in_reg[7]),
    .QN(_373_)
  );
  DFF_X1 _586_ (
    .CK(clk),
    .D(_001_[8]),
    .Q(data_in_reg[8]),
    .QN(_374_)
  );
  DFF_X1 _587_ (
    .CK(clk),
    .D(_001_[9]),
    .Q(data_in_reg[9]),
    .QN(_375_)
  );
  DFF_X1 _588_ (
    .CK(clk),
    .D(_001_[10]),
    .Q(data_in_reg[10]),
    .QN(_376_)
  );
  DFF_X1 _589_ (
    .CK(clk),
    .D(_001_[11]),
    .Q(data_in_reg[11]),
    .QN(_377_)
  );
  DFF_X1 _590_ (
    .CK(clk),
    .D(_001_[12]),
    .Q(data_in_reg[12]),
    .QN(_378_)
  );
  DFF_X1 _591_ (
    .CK(clk),
    .D(_001_[13]),
    .Q(data_in_reg[13]),
    .QN(_379_)
  );
  DFF_X1 _592_ (
    .CK(clk),
    .D(_001_[14]),
    .Q(data_in_reg[14]),
    .QN(_380_)
  );
  DFF_X1 _593_ (
    .CK(clk),
    .D(_001_[15]),
    .Q(data_in_reg[15]),
    .QN(_381_)
  );
  DFF_X1 _594_ (
    .CK(clk),
    .D(_004_[0]),
    .Q(sram_rdata_reg[0]),
    .QN(_382_)
  );
  DFF_X1 _595_ (
    .CK(clk),
    .D(_004_[1]),
    .Q(sram_rdata_reg[1]),
    .QN(_383_)
  );
  DFF_X1 _596_ (
    .CK(clk),
    .D(_004_[2]),
    .Q(sram_rdata_reg[2]),
    .QN(_384_)
  );
  DFF_X1 _597_ (
    .CK(clk),
    .D(_004_[3]),
    .Q(sram_rdata_reg[3]),
    .QN(_385_)
  );
  DFF_X1 _598_ (
    .CK(clk),
    .D(_004_[4]),
    .Q(sram_rdata_reg[4]),
    .QN(_386_)
  );
  DFF_X1 _599_ (
    .CK(clk),
    .D(_004_[5]),
    .Q(sram_rdata_reg[5]),
    .QN(_387_)
  );
  DFF_X1 _600_ (
    .CK(clk),
    .D(_004_[6]),
    .Q(sram_rdata_reg[6]),
    .QN(_388_)
  );
  DFF_X1 _601_ (
    .CK(clk),
    .D(_004_[7]),
    .Q(sram_rdata_reg[7]),
    .QN(_389_)
  );
  DFF_X1 _602_ (
    .CK(clk),
    .D(_004_[8]),
    .Q(sram_rdata_reg[8]),
    .QN(_390_)
  );
  DFF_X1 _603_ (
    .CK(clk),
    .D(_004_[9]),
    .Q(sram_rdata_reg[9]),
    .QN(_391_)
  );
  DFF_X1 _604_ (
    .CK(clk),
    .D(_004_[10]),
    .Q(sram_rdata_reg[10]),
    .QN(_392_)
  );
  DFF_X1 _605_ (
    .CK(clk),
    .D(_004_[11]),
    .Q(sram_rdata_reg[11]),
    .QN(_393_)
  );
  DFF_X1 _606_ (
    .CK(clk),
    .D(_004_[12]),
    .Q(sram_rdata_reg[12]),
    .QN(_394_)
  );
  DFF_X1 _607_ (
    .CK(clk),
    .D(_004_[13]),
    .Q(sram_rdata_reg[13]),
    .QN(_395_)
  );
  DFF_X1 _608_ (
    .CK(clk),
    .D(_004_[14]),
    .Q(sram_rdata_reg[14]),
    .QN(_396_)
  );
  DFF_X1 _609_ (
    .CK(clk),
    .D(_004_[15]),
    .Q(sram_rdata_reg[15]),
    .QN(_397_)
  );
  DFF_X1 _610_ (
    .CK(clk),
    .D(_005_),
    .Q(valid_reg_out),
    .QN(_398_)
  );
  DFF_X1 _611_ (
    .CK(clk),
    .D(_000_[0]),
    .Q(addr_ptr[0]),
    .QN(_399_)
  );
  DFF_X1 _612_ (
    .CK(clk),
    .D(_000_[1]),
    .Q(addr_ptr[1]),
    .QN(_400_)
  );
  DFF_X1 _613_ (
    .CK(clk),
    .D(_000_[2]),
    .Q(addr_ptr[2]),
    .QN(_401_)
  );
  DFF_X1 _614_ (
    .CK(clk),
    .D(_000_[3]),
    .Q(addr_ptr[3]),
    .QN(_402_)
  );
  DFF_X1 _615_ (
    .CK(clk),
    .D(_000_[4]),
    .Q(addr_ptr[4]),
    .QN(_403_)
  );
  DFF_X1 _616_ (
    .CK(clk),
    .D(_003_[0]),
    .Q(init_count[0]),
    .QN(_404_)
  );
  DFF_X1 _617_ (
    .CK(clk),
    .D(_003_[1]),
    .Q(init_count[1]),
    .QN(_405_)
  );
  DFF_X1 _618_ (
    .CK(clk),
    .D(_003_[2]),
    .Q(init_count[2]),
    .QN(_406_)
  );
  DFF_X1 _619_ (
    .CK(clk),
    .D(_003_[3]),
    .Q(init_count[3]),
    .QN(_407_)
  );
  DFF_X1 _620_ (
    .CK(clk),
    .D(_003_[4]),
    .Q(init_count[4]),
    .QN(_408_)
  );
  SRAM_6T_CORE_32x16_MC_TB sram_inst (
    .addr_in(addr_ptr),
    .ce_in(_115_),
    .clk(clk),
    .rd_out(sram_rdata),
    .wd_in(data_in_reg),
    .we_in(_116_)
  );
  Appro4_2_16bit u_multiplier (
    .N1(data_in_reg),
    .N2(sram_rdata_reg),
    .P_APPROX(product)
  );
  assign init_done = curr_state[1];
  assign sram_addr = addr_ptr;
  assign valid_out = valid_reg_out;
  assign _021_ = _331_;
  assign _081_ = _399_;
  assign _090_ = _400_;
  assign _096_ = _401_;
  assign _102_ = _402_;
  assign _109_ = _403_;
  assign _056_ = _404_;
  assign _062_ = _405_;
  assign _067_ = _406_;
  assign _072_ = _407_;
  assign _057_ = _408_;
  assign _314_ = rst_n;
  assign _281_ = pe_ce;
  assign _233_ = init_count[1];
  assign _232_ = init_count[0];
  assign _235_ = init_count[3];
  assign _234_ = init_count[2];
  assign _236_ = init_count[4];
  assign _215_ = curr_state[2];
  assign _005_ = _191_;
  assign _007_ = _193_;
  assign _237_ = init_enable;
  assign _213_ = curr_state[0];
  assign _008_ = _194_;
  assign _202_ = _331_;
  assign _006_ = _192_;
  assign _315_ = sram_rdata[0];
  assign _004_[0] = _175_;
  assign _322_ = sram_rdata[1];
  assign _004_[1] = _182_;
  assign _323_ = sram_rdata[2];
  assign _004_[2] = _183_;
  assign _324_ = sram_rdata[3];
  assign _004_[3] = _184_;
  assign _325_ = sram_rdata[4];
  assign _004_[4] = _185_;
  assign _326_ = sram_rdata[5];
  assign _004_[5] = _186_;
  assign _327_ = sram_rdata[6];
  assign _004_[6] = _187_;
  assign _328_ = sram_rdata[7];
  assign _004_[7] = _188_;
  assign _329_ = sram_rdata[8];
  assign _004_[8] = _189_;
  assign _330_ = sram_rdata[9];
  assign _004_[9] = _190_;
  assign _316_ = sram_rdata[10];
  assign _004_[10] = _176_;
  assign _317_ = sram_rdata[11];
  assign _004_[11] = _177_;
  assign _318_ = sram_rdata[12];
  assign _004_[12] = _178_;
  assign _319_ = sram_rdata[13];
  assign _004_[13] = _179_;
  assign _320_ = sram_rdata[14];
  assign _004_[14] = _180_;
  assign _321_ = sram_rdata[15];
  assign _004_[15] = _181_;
  assign _282_ = product[0];
  assign _214_ = curr_state[1];
  assign _002_[0] = _138_;
  assign _293_ = product[1];
  assign _002_[1] = _149_;
  assign _304_ = product[2];
  assign _002_[2] = _160_;
  assign _307_ = product[3];
  assign _002_[3] = _163_;
  assign _308_ = product[4];
  assign _002_[4] = _164_;
  assign _309_ = product[5];
  assign _002_[5] = _165_;
  assign _310_ = product[6];
  assign _002_[6] = _166_;
  assign _311_ = product[7];
  assign _002_[7] = _167_;
  assign _312_ = product[8];
  assign _002_[8] = _168_;
  assign _313_ = product[9];
  assign _002_[9] = _169_;
  assign _283_ = product[10];
  assign _002_[10] = _139_;
  assign _284_ = product[11];
  assign _002_[11] = _140_;
  assign _285_ = product[12];
  assign _002_[12] = _141_;
  assign _286_ = product[13];
  assign _002_[13] = _142_;
  assign _287_ = product[14];
  assign _002_[14] = _143_;
  assign _288_ = product[15];
  assign _002_[15] = _144_;
  assign _289_ = product[16];
  assign _002_[16] = _145_;
  assign _290_ = product[17];
  assign _002_[17] = _146_;
  assign _291_ = product[18];
  assign _002_[18] = _147_;
  assign _292_ = product[19];
  assign _002_[19] = _148_;
  assign _294_ = product[20];
  assign _002_[20] = _150_;
  assign _295_ = product[21];
  assign _002_[21] = _151_;
  assign _296_ = product[22];
  assign _002_[22] = _152_;
  assign _297_ = product[23];
  assign _002_[23] = _153_;
  assign _298_ = product[24];
  assign _002_[24] = _154_;
  assign _299_ = product[25];
  assign _002_[25] = _155_;
  assign _300_ = product[26];
  assign _002_[26] = _156_;
  assign _301_ = product[27];
  assign _002_[27] = _157_;
  assign _302_ = product[28];
  assign _002_[28] = _158_;
  assign _303_ = product[29];
  assign _002_[29] = _159_;
  assign _305_ = product[30];
  assign _002_[30] = _161_;
  assign _306_ = product[31];
  assign _002_[31] = _162_;
  assign _216_ = data_in[0];
  assign _001_[0] = _122_;
  assign _223_ = data_in[1];
  assign _001_[1] = _129_;
  assign _224_ = data_in[2];
  assign _001_[2] = _130_;
  assign _225_ = data_in[3];
  assign _001_[3] = _131_;
  assign _226_ = data_in[4];
  assign _001_[4] = _132_;
  assign _227_ = data_in[5];
  assign _001_[5] = _133_;
  assign _228_ = data_in[6];
  assign _001_[6] = _134_;
  assign _229_ = data_in[7];
  assign _001_[7] = _135_;
  assign _230_ = data_in[8];
  assign _001_[8] = _136_;
  assign _231_ = data_in[9];
  assign _001_[9] = _137_;
  assign _217_ = data_in[10];
  assign _001_[10] = _123_;
  assign _218_ = data_in[11];
  assign _001_[11] = _124_;
  assign _219_ = data_in[12];
  assign _001_[12] = _125_;
  assign _220_ = data_in[13];
  assign _001_[13] = _126_;
  assign _221_ = data_in[14];
  assign _001_[14] = _127_;
  assign _222_ = data_in[15];
  assign _001_[15] = _128_;
  assign _115_ = _195_;
  assign _212_ = _408_;
  assign _208_ = _404_;
  assign _003_[0] = _170_;
  assign _209_ = _405_;
  assign _003_[1] = _171_;
  assign _210_ = _406_;
  assign _003_[2] = _172_;
  assign _211_ = _407_;
  assign _003_[3] = _173_;
  assign _003_[4] = _174_;
  assign _197_ = addr_ptr[0];
  assign _198_ = addr_ptr[1];
  assign _200_ = addr_ptr[3];
  assign _199_ = addr_ptr[2];
  assign _201_ = addr_ptr[4];
  assign _203_ = _399_;
  assign _000_[0] = _117_;
  assign _204_ = _400_;
  assign _000_[1] = _118_;
  assign _205_ = _401_;
  assign _000_[2] = _119_;
  assign _206_ = _402_;
  assign _000_[3] = _120_;
  assign _207_ = _403_;
  assign _000_[4] = _121_;
  assign _116_ = _196_;
endmodule
